@charset "UTF-8";*,:after,:before{box-sizing:border-box}ol[class],ul[class]{padding:0}blockquote,body,dd,dl,figcaption,figure,h1,h2,h3,h4,li,ol[class],p,ul[class]{margin:0}body{min-height:100vh;scroll-behavior:smooth;text-rendering:optimizeSpeed;line-height:1.5}ol[class],ul[class]{list-style:none}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img{max-width:100%;display:block;height:auto}article>*+*{margin-top:1em}button,input,select,textarea{font:inherit}@media (prefers-reduced-motion:reduce){*{animation-duration:.01ms!important;animation-iteration-count:1!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}@font-face{font-family:OpenSans;src:url(assets/fonts/Open_Sans/OpenSans-Bold.ttf) format("truetype");font-weight:900}@font-face{font-family:OpenSans;src:url(assets/fonts/Open_Sans/OpenSans-Regular.ttf) format("truetype");font-weight:400}@font-face{font-family:OpenSans;src:url(assets/fonts/Open_Sans/OpenSans-Light.ttf) format("truetype");font-weight:100}@font-face{font-family:Hind;src:url(assets/fonts/Hind/Hind-Regular.ttf) format("truetype");font-weight:400}@font-face{font-family:Hind;src:url(assets/fonts/Hind/Hind-SemiBold.ttf) format("truetype");font-weight:600}html{font-size:100%}body{font-size:16px;font-family:Arial,Helvetica,sans-serif}.site{display:flex;flex-direction:column;justify-content:space-between;min-height:100vh}.wrap{max-width:1200px}.widewrapper,.wrap{width:90%;margin:auto}.flex{display:flex;justify-content:space-between}.flex_col{display:flex;flex-direction:column}.flex_ctr{display:flex;align-items:center}.ratio_1_1,.ratio_1_2,.ratio_2_3,.ratio_3_4,.ratio_outer{position:relative;width:100%}.ratio_1_1:after,.ratio_1_2:after,.ratio_2_3:after,.ratio_3_4:after,.ratio_outer:after{content:"";display:block;padding-bottom:100%}.ratio_1_1:after{padding-bottom:100%}.ratio_2_3:after{padding-bottom:60%}.ratio_3_4:after{padding-bottom:75%}.ratio_1_2:after{padding-bottom:50%}.ratio_inner{position:absolute;width:100%;height:100%}.ratio_inner img{width:100%;height:100%;object-fit:cover}.mb-05{margin-bottom:10px}.mb-1{margin-bottom:20px}.mb-2{margin-bottom:40px}.mb-3{margin-bottom:60px}.mb-4{margin-bottom:80px}body{font-family:OpenSans,arial,sans-serif}.txt-ctr{text-align:center}.txt-rgt{text-align:right}h1,h2,h3,h4,h5,h6{font-family:Hind,arial,sans-serif}.h_2{font-size:28px;font-weight:600;text-transform:uppercase;font-style:normal;text-decoration:none;line-height:1;color:#2c3484}.h_21{text-align:left;color:#00274e}.h_3,.h_21{font-size:22px;font-weight:600;line-height:1.44em;letter-spacing:0}.h_3,.h_4{text-transform:uppercase;font-style:normal;text-decoration:none;color:#2c3484}.h_4{font-size:1.2rem;font-weight:600;line-height:1}.ft_1{text-transform:uppercase;font-weight:100;color:#5f656d;font-size:.9rem}.ft_1.green{color:#3aa342}.ft_1.blue{color:#2c3484}.ft_2{font-weight:700;font-size:.9rem}.icon{padding:3px}.icon svg{width:1em;height:1em;position:relative;display:block}p{color:#5f656d;font-size:1rem;font-weight:400;text-transform:none;font-style:normal;text-decoration:none;line-height:1.643em;padding:0;margin:0}.entry-content p{margin-bottom:20px}.sep{font-size:16px;display:inline-block;padding:0 5px}.cover img{position:absolute;top:0;left:0;right:0;bottom:0;object-fit:cover;width:100%;height:100%}.site-branding{display:flex;justify-content:space-between;padding:8px 0;align-items:center}@media (max-width:800px){.site-branding{flex-wrap:wrap}}.header_logo{width:35%}@media (max-width:800px){.header_logo{width:45%}}.header_logo img{max-height:80px;width:auto}.header_contact{min-width:150px;border-right:1px solid #e6e8e8}@media (max-width:800px){.header_contact{width:45%;order:3}}.header_contact span{display:inline-block;line-height:1;padding-top:5px}.header_localisation{width:20%}@media (max-width:800px){.header_localisation{width:45%;order:4}}.main-navigation{background-color:#2c3484;padding:10px 0}.main-navigation ul{list-style:none;margin:0;padding:0;display:flex;justify-content:flex-start}@media (max-width:800px){.main-navigation ul{flex-wrap:wrap}}.main-navigation ul a{font-family:Hind,Sans-serif;font-size:14px;font-weight:600;text-transform:uppercase;font-style:normal;line-height:23.002px;letter-spacing:.56px;color:#fff;padding:5px 10px}@media (max-width:800px){.main-navigation ul a{display:inline-block;padding:7px 30px;font-size:22px}}.site-footer{margin-top:20px;background-color:#2c3484;color:#718eaa;padding:30px 0}@media (max-width:800px){.site-footer .flex{flex-wrap:wrap}}.site-footer .footer_item{width:25%}@media (max-width:800px){.site-footer .footer_item{width:100%;margin-bottom:60px}}.site-footer .widget-area{width:75%;display:flex}@media (max-width:800px){.site-footer .widget-area{width:100%;flex-wrap:wrap}}.site-footer .widget{width:33%;flex:0 0 33%;padding:0 25px}@media (max-width:800px){.site-footer .widget{width:100%;flex:0 0 100%;margin-bottom:60px;font-size:1.2rem;line-height:1.8}}.site-footer .widget a,.site-footer .widget p{color:#e6e8e8}@media (max-width:800px){.site-footer .widget a,.site-footer .widget p{font-size:1.2rem;line-height:1.8}}.site-footer .widget a:hover{color:#fff;padding-left:3px}.site-footer .widget ul{list-style:"â€£ ";padding-left:10px;margin:0}.site-footer .footer_title{margin-bottom:20px;text-transform:none}.site-footer .widget-title{margin-bottom:20px}.site-subfooter{background-color:#1c2155;color:#e6e8e8;padding:10px 0;font-size:.9rem}a{text-decoration:none;transition:all .2s}.link_block{display:block}.link_block:hover img{box-shadow:0 0 5px #e6e8e8}.btn,.btn--white,.btn--yellow,input[type=submit]{display:inline-block;background-color:#3aa342;color:#fff;text-transform:uppercase;padding:15px 30px;font-size:.9rem;border:none;font-weight:700}.btn--white:hover,.btn--yellow:hover,.btn:hover,input[type=submit]:hover{background-color:#2c3484;cursor:pointer}.btn--white{background-color:#fff;color:#2c3484}.btn--white:hover{color:#fff}.btn--yellow{background-color:#ffc704}.btn--yellow:after{content:" >";font-weight:400;font-size:.8;padding-left:10px}input[type=email],input[type=search],input[type=text],textarea{background-color:#f5f6f6;padding:10px;border:none;border-bottom:1px solid #e6e8e8;width:100%}label{color:#5f656d;font-size:1rem}.section{margin-bottom:40px;position:relative}.section_title,h2.screen-reader-text{position:relative;font-size:22px;font-weight:600;text-transform:uppercase;font-style:normal;text-decoration:none;line-height:1.44em;color:#2c3484}.section_title:before,h2.screen-reader-text:before{content:"";position:absolute;top:-15px;left:0;right:0;margin:auto;width:20px;height:3px;background-color:#3aa342}h2.screen-reader-text{text-align:center;margin-bottom:20px}.section.widepanel .section_cover{width:100%;position:relative}.section.widepanel .section_cover:after{content:"";position:absolute;top:0;left:0;right:0;bottom:0;background-color:rgba(0,0,0,.3)}.section.widepanel img{width:100%;height:600px;height:60vh;object-fit:cover}@media (max-width:800px){.section.widepanel img{height:100vh}}.section.widepanel .section_title,.section.widepanel h2.screen-reader-text{color:#fff;font-size:3rem}.section.widepanel .section_title:before,.section.widepanel h2.screen-reader-text:before{display:none}.section.widepanel .section_content{position:absolute;z-index:2;top:30%;color:#fff;padding-left:30px;padding-bottom:10px;border-left:5px solid #ffc704;max-width:900px}@media (max-width:800px){.section.widepanel .section_content{top:30px;right:50px;left:20px}}.section.widepanel .section_content p{color:inherit;font-size:1.4rem;margin-bottom:0}.section.widepanel .section_action{margin-top:20px}.section.logos{background-color:#f5f6f6;padding-top:60px;padding-bottom:20px}.section.logos .section_title,.section.logos h2.screen-reader-text{margin-bottom:40px}.section.logos .logos_list{display:flex;justify-content:space-evenly;align-items:center;flex-wrap:wrap}.section.logos .logos_list img{height:auto;max-height:150px;width:auto;max-width:150px;padding:20px;margin-bottom:0}.section.news{padding:40px 0 20px}.section.news .news_title{position:relative;margin-bottom:40px}.section.news .news_title:after{content:"";position:absolute;bottom:-15px;left:0;width:20px;height:3px;background-color:#3aa342}.section.news .card_cover{margin-bottom:20px}.section.services{padding-top:60px;padding-bottom:20px}.section.services .service_title{position:relative}.section.services .card_cover{margin-bottom:20px}.section.services .link_block:hover img{box-shadow:none}.section.services .service_card:hover{box-shadow:0 0 5px #e6e8e8}.service_title{padding:15px 0}.section_cards,.section_cards--half,.section_cards--third{justify-content:space-between;flex-wrap:wrap;margin-top:25px;width:100%}.section_cards--half .service_card,.section_cards--third .service_card,.section_cards .service_card{flex:1;background-color:#f5f6f6;padding:15px}.section_cards--half .service_card .card_cover:after,.section_cards--third .service_card .card_cover:after,.section_cards .service_card .card_cover:after{padding-bottom:70%}.section_cards--half .service_card p,.section_cards--third .service_card p,.section_cards .service_card p{font-size:1rem}.section_cards--half .service_card span,.section_cards--third .service_card span,.section_cards .service_card span{color:#ffc704}.section_cards--half .service_card .card_excerpt,.section_cards--third .service_card .card_excerpt,.section_cards .service_card .card_excerpt{display:none}.section_cards--half .news_card,.section_cards--third .news_card,.section_cards .news_card{flex:0 0 24%;width:24%;margin-bottom:4%}@media (max-width:800px){.section_cards--half .news_card,.section_cards--third .news_card,.section_cards .news_card{flex:0 0 48%;width:48%}}.section_cards--half .news_card .news_title,.section_cards--third .news_card .news_title,.section_cards .news_card .news_title{margin-bottom:25px}.section_cards--half .service_card{flex:0 0 48%;width:48%;padding:30px;max-width:none!important}.section_cards--half .service_card .card_excerpt{display:block}.section_cards--half .news_card{flex:0 0 48%;width:48%}.section_cards--third .service_card{flex:0 0 32%;width:32%;padding:30px}.section_cards--third .service_card .card_excerpt{display:block}.section_cards--third .news_card{flex:0 0 32%;width:32%}@media (max-width:800px){.section_cards--third .news_card{flex:0 0 48%;width:48%;margin-bottom:4%}}.slick-slider{box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list,.slick-slider{position:relative;display:block;max-width:100%}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:none}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{transform:translateZ(0)}.slick-track{position:relative;left:0;top:0;display:flex;margin-left:auto;margin-right:auto;align-items:center}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block;max-height:550px;margin:0!important;padding:0 10px;object-fit:contain}.slick-slide.slick-loading img{display:none}.slick-slide figcaption{padding-top:20px;padding-bottom:20px;font-size:.9rem;color:gray;text-align:center}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.slick-loading .slick-list{background:#fff url(ajax-loader.gif) 50% no-repeat}@font-face{font-family:slick;src:url(fonts/slick.eot);src:url(fonts/slick.eot?#iefix) format("embedded-opentype"),url(fonts/slick.woff) format("woff"),url(fonts/slick.ttf) format("truetype"),url(fonts/slick.svg#slick) format("svg");font-weight:400;font-style:normal}.slick-next,.slick-prev{position:absolute;display:flex;justify-content:center;flex-direction:column;line-height:1;font-size:10px;cursor:pointer;background:transparent;top:0;bottom:0;padding:0;border:none;outline:none;color:#000;z-index:1;opacity:1;width:100px;text-align:center}.slick-next:focus,.slick-next:hover,.slick-prev:focus,.slick-prev:hover{opacity:1}.slick-next.slick-disabled:before,.slick-prev.slick-disabled:before{opacity:.25}.slick-next span,.slick-prev span{font-size:30px}.slick-next p,.slick-prev p{margin:0;font-size:11px;line-height:1}.slick-prev{left:-40px;align-items:flex-start}.slick-prev p{margin-left:-16px}.slick-next{right:-40px;align-items:flex-end}.slick-next p{margin-right:-10px}.slick-dotted.slick-slider{margin-bottom:30px}.slick-dots{position:absolute;bottom:-25px;list-style:none;display:block;text-align:center;padding:0;margin:0;width:100%}.slick-dots li{position:relative;display:inline-block;margin:0 5px;padding:0}.slick-dots li,.slick-dots li button{height:20px;width:20px;cursor:pointer}.slick-dots li button{border:0;background:transparent;display:block;outline:none;line-height:0;font-size:0;color:transparent;padding:5px}.slick-dots li button:focus,.slick-dots li button:hover{outline:none}.slick-dots li button:focus:before,.slick-dots li button:hover:before{opacity:1}.slick-dots li button:before{position:absolute;top:0;left:0;content:"â€¢";width:20px;height:20px;font-family:slick;font-size:6px;line-height:20px;text-align:center;color:#000;opacity:.25;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.slick-dots li.slick-active button:before{color:#000;opacity:.75}.entry-header{background-color:#f5f6f6;padding:20em 0 3em;margin-bottom:80px;position:relative}.entry-header .entry-title{display:inline-block;font-family:Hind,arial,sans-serif;color:#2c3484;text-transform:uppercase;font-size:3rem;line-height:1.1em;letter-spacing:0;font-weight:600;background:hsla(0,0%,100%,.9);z-index:2;position:relative;padding:.3em .5em 0;max-width:800px}.entry-header .entry-title *{font-size:inherit;font-weight:inherit;text-transform:inherit;color:inherit;display:inline}.page_content{margin-bottom:100px}.entry-rebonds{padding:3em 0 1em}.entry-rebonds .section_title:before,.entry-rebonds h2.screen-reader-text:before{margin-top:0;margin-bottom:0}.entry-rebonds .service_card{max-width:24%}@media (max-width:800px){.entry-rebonds .service_card{width:48%;max-width:none;flex:0 0 48%;margin-bottom:4%}}.entry-news{background-color:#f5f6f6;padding:3em 0 1em}.entry-content h5{font-size:1.2rem;margin-bottom:20px}.entry-content img{margin-bottom:40px}.entry-content .gallery{margin:40px 0;background-color:#f9f9f9}.entry-meta{border:1px solid #5f656d;padding:20px;font-size:1.2em;line-height:1.2}.entry-meta div{margin-bottom:8px}.entry-meta a{color:inherit}.entry-excerpt{max-width:750px}.entry-excerpt p{font-weight:900;font-size:1.4rem}.entry-contenttext{max-width:750px}.services_list{margin-bottom:40px}.services_list a{margin-bottom:7px;font-size:14px;font-style:normal;text-decoration:none;line-height:18.9px;letter-spacing:1px;color:#000}.block_contact{background-color:#3aa342;color:#fff;padding:20px;max-width:700px;margin:auto;text-align:center}.block_contact p{color:inherit;margin-bottom:20px}.block_contact .block_title{color:#fff;margin-bottom:20px;font-size:30px;font-weight:400}.block_contact .block_btn{font-size:16px;font-weight:400;border:1px solid}@media (max-width:800px){.type-post .page_content{flex-direction:column}}.type-post .page_content main{order:1;flex:0 0 65%;width:65%}@media (max-width:800px){.type-post .page_content main{order:0;flex:0 0 100%;width:100%}}.type-post .page_content aside{flex:0 0 30%;width:30%}@media (max-width:800px){.type-post .page_content aside{flex:0 0 100%;width:100%}}.type-post .entry-excerpt{margin-left:0}.type-post .service_card{max-width:24%}.nav-links{display:flex;justify-content:space-evenly}.nav-links .nav-title{color:#000;font-size:1.4rem}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvX2Zvb3Rlci5zYXNzIiwiYmFzZS9fcmVzZXQuc2FzcyIsImJhc2UvX2ZvbnRzLnNhc3MiLCJiYXNlL19nZW5lcmFsLnNhc3MiLCJiYXNlL190eXBvZ3JhcGh5LnNhc3MiLCJhYnN0cmFjdHMvX3ZhcmlhYmxlcy5zYXNzIiwiYmFzZS9fbWVkaWFzLnNhc3MiLCJjb21wb25lbnRzL19oZWFkZXIuc2FzcyIsImFic3RyYWN0cy9fbWl4aW5zLnNhc3MiLCJjb21wb25lbnRzL19idXR0b25zLnNhc3MiLCJjb21wb25lbnRzL19mb3Jtcy5zYXNzIiwiY29tcG9uZW50cy9fZmxleGlibGVzLnNhc3MiLCJ2ZW5kb3Ivc2xpY2suc2FzcyIsIm1haW4uY3NzIiwicGFnZXMvX3BhZ2Uuc2FzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQSxnQkErQ3VCLENDbkR2QixpQkFHRSxxQkFBc0IsQ0FJeEIsb0JBRUUsU0FBVSxDQUlaLDZFQWNFLFFBQVMsQ0FJWCxLQUNFLGdCQUFpQixDQUNqQixzQkFBdUIsQ0FDdkIsNEJBQTZCLENBQzdCLGVBQWdCLENBNUJsQixvQkFpQ0UsZUFBZ0IsQ0FJbEIsZUFDRSxnQ0FBOEIsQ0FBOUIsNkJBQThCLENBSWhDLElBQ0UsY0FBZSxDQUNmLGFBQWMsQ0FDZCxXQUFZLENBR2QsWUFDRSxjQUFlLENBSWpCLDZCQUlFLFlBQWEsQ0FJZix1Q0FDRSxFQUNFLGtDQUFxQyxDQUNyQyxxQ0FBdUMsQ0FDdkMsbUNBQXNDLENBQ3RDLDhCQUFnQyxDQUFHLENDekV2QyxXQUNJLG9CQUF1QixDQUN2QixvRUFBdUUsQ0FDdkUsZUFBZ0IsQ0FFcEIsV0FDSSxvQkFBdUIsQ0FDdkIsdUVBQTBFLENBQzFFLGVBQWdCLENBRXBCLFdBQ0ksb0JBQXVCLENBQ3ZCLHFFQUF3RSxDQUN4RSxlQUFnQixDQUtwQixXQUNJLGdCQUFtQixDQUNuQiw4REFBaUUsQ0FDakUsZUFBZ0IsQ0FFcEIsV0FDSSxnQkFBbUIsQ0FDbkIsK0RBQWtFLENB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QVksQ0FDWixZQUFhLENBQ2IsZUFBZ0IsQ0FDaEIsV0FBWSxDQUNaLGlCQUFrQixDQU50QixpQkFTUSxhQUFjLENBQ2Qsa0JBQW1CLENBVjNCLDRCQWFRLFVBQVksQ0FDWixrQkFBbUIsQ0FDbkIsY0FBZSxDQUNmLGVBQW1CLENBaEIzQiwwQkFtQlEsY0FBZSxDQUNmLGVBQW1CLENBQ25CLGdCQUFpQixDTnJFckIseUJNZ0ZKLHlCQUdZLHFCQUFzQixDQWVBLENBbEJsQyw4QkFLWSxPQUFRLENBQ1IsWUFBYSxDQUNiLFNBQVUsQ052RmxCLHlCTWdGSiw4QkFTZ0IsT0FBUSxDQUNSLGFBQWMsQ0FDZCxVQUFXLENBQUssQ0FYaEMsK0JBY1ksWUFBYSxDQUNiLFNBQVUsQ04vRmxCLHlCTWdGSiwrQkFpQmdCLGFBQWMsQ0FDZCxVQUFXLENBQUssQ0FsQmhDLDBCQXFCUSxhQUFjLENBckJ0Qix5QkF3QlEsYUFBYyxDQUl0QixXQUNJLFlBQWEsQ0FDYiw0QkFBNkIsQ0FGakMsc0JBTVEsVUFBWSxDQUNaLGdCQUFpQiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBGT09URVIgU1RZTEVTXG4gKi9cblxuXG4uc2l0ZS1mb290ZXIge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWU7XG4gICAgY29sb3I6ICM3MThlYWE7XG4gICAgcGFkZGluZzogMzBweCAwO1xuXG4gICAgLmZsZXgge1xuICAgICAgICBAaW5jbHVkZSB1cC10byg4MDBweCkge1xuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwOyB9IH1cblxuICAgIC5mb290ZXJfaXRlbSB7XG4gICAgICAgIHdpZHRoOiAyNSU7XG4gICAgICAgIEBpbmNsdWRlIHVwLXRvKDgwMHB4KSB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDYwcHg7IH0gfVxuXG4gICAgLndpZGdldC1hcmVhIHtcbiAgICAgICAgd2lkdGg6IDc1JTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgQGluY2x1ZGUgdXAtdG8oODAwcHgpIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwOyB9IH1cblxuICAgIC53aWRnZXQge1xuICAgICAgICB3aWR0aDogMzMlO1xuICAgICAgICBmbGV4OiAwIDAgMzMlO1xuICAgICAgICBwYWRkaW5nOiAwIDI1cHg7XG4gICAgICAgIEBpbmNsdWRlIHVwLXRvKDgwMHB4KSB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNjBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuODsgfVxuXG4gICAgICAgIGEsIHAge1xuICAgICAgICAgICAgY29sb3I6ICRncmF5X2xpZ2h0O1xuICAgICAgICAgICAgQGluY2x1ZGUgdXAtdG8oODAwcHgpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMS44OyB9IH1cblxuICAgICAgICBhOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogM3B4OyB9XG5cbiAgICAgICAgdWwge1xuICAgICAgICAgICAgbGlzdC1zdHlsZTogXCLigKMgXCI7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgICAgICAgICBtYXJnaW46IDBweDsgfSB9XG5cbiAgICAuZm9vdGVyX3RpdGxlIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuICAgIC53aWRnZXQtdGl0bGUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9IH1cblxuXG4uc2l0ZS1zdWJmb290ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRibHVlX2Rhcms7XG4gICAgY29sb3I6ICRncmF5X2xpZ2h0O1xuICAgIHBhZGRpbmc6IDEwcHggMDtcbiAgICBmb250LXNpemU6IC45cmVtOyB9XG4iLCIvKiBCb3ggc2l6aW5nIHJ1bGVzICovXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cblxuLyogUmVtb3ZlIGRlZmF1bHQgcGFkZGluZyAqL1xudWxbY2xhc3NdLFxub2xbY2xhc3NdIHtcbiAgcGFkZGluZzogMDsgfVxuXG5cbi8qIFJlbW92ZSBkZWZhdWx0IG1hcmdpbiAqL1xuYm9keSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxucCxcbnVsW2NsYXNzXSxcbm9sW2NsYXNzXSxcbmxpLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmJsb2NrcXVvdGUsXG5kbCxcbmRkIHtcbiAgbWFyZ2luOiAwOyB9XG5cblxuLyogU2V0IGNvcmUgYm9keSBkZWZhdWx0cyAqL1xuYm9keSB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplU3BlZWQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7IH1cblxuLyogUmVtb3ZlIGxpc3Qgc3R5bGVzIG9uIHVsLCBvbCBlbGVtZW50cyB3aXRoIGEgY2xhc3MgYXR0cmlidXRlICovXG51bFtjbGFzc10sXG5vbFtjbGFzc10ge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cblxuLyogQSBlbGVtZW50cyB0aGF0IGRvbid0IGhhdmUgYSBjbGFzcyBnZXQgZGVmYXVsdCBzdHlsZXMgKi9cbmE6bm90KFtjbGFzc10pIHtcbiAgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rOiBhdXRvOyB9XG5cblxuLyogTWFrZSBpbWFnZXMgZWFzaWVyIHRvIHdvcmsgd2l0aCAqL1xuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qIE5hdHVyYWwgZmxvdyBhbmQgcmh5dGhtIGluIGFydGljbGVzIGJ5IGRlZmF1bHQgKi9cbmFydGljbGUgPiAqICsgKiB7XG4gIG1hcmdpbi10b3A6IDFlbTsgfVxuXG5cbi8qIEluaGVyaXQgZm9udHMgZm9yIGlucHV0cyBhbmQgYnV0dG9ucyAqL1xuaW5wdXQsXG5idXR0b24sXG50ZXh0YXJlYSxcbnNlbGVjdCB7XG4gIGZvbnQ6IGluaGVyaXQ7IH1cblxuXG4vKiBSZW1vdmUgYWxsIGFuaW1hdGlvbnMgYW5kIHRyYW5zaXRpb25zIGZvciBwZW9wbGUgdGhhdCBwcmVmZXIgbm90IHRvIHNlZSB0aGVtICovXG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSkge1xuICAqIHtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuMDFtcyAhaW1wb3J0YW50O1xuICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDEgIWltcG9ydGFudDtcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjAxbXMgIWltcG9ydGFudDtcbiAgICBzY3JvbGwtYmVoYXZpb3I6IGF1dG8gIWltcG9ydGFudDsgfSB9XG4iLCJcbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnT3BlblNhbnMnO1xuICAgIHNyYzogdXJsKCdhc3NldHMvZm9udHMvT3Blbl9TYW5zL09wZW5TYW5zLUJvbGQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7IH1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdPcGVuU2Fucyc7XG4gICAgc3JjOiB1cmwoJ2Fzc2V0cy9mb250cy9PcGVuX1NhbnMvT3BlblNhbnMtUmVndWxhci50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ09wZW5TYW5zJztcbiAgICBzcmM6IHVybCgnYXNzZXRzL2ZvbnRzL09wZW5fU2Fucy9PcGVuU2Fucy1MaWdodC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IDEwMDsgfVxuXG4kb3BlbnNhbnM6ICdPcGVuU2FucycsIGFyaWFsLCBzYW5zLXNlcmlmO1xuXG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnSGluZCc7XG4gICAgc3JjOiB1cmwoJ2Fzc2V0cy9mb250cy9IaW5kL0hpbmQtUmVndWxhci50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0hpbmQnO1xuICAgIHNyYzogdXJsKCdhc3NldHMvZm9udHMvSGluZC9IaW5kLVNlbWlCb2xkLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbiAgICBmb250LXdlaWdodDogNjAwOyB9XG5cblxuJGhpbmQ6ICdIaW5kJywgYXJpYWwsIHNhbnMtc2VyaWY7XG4iLCJcblxuaHRtbCB7XG4gICAgZm9udC1zaXplOiAxMDAlOyB9XG5cbmJvZHkge1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgfVxuXG4uc2l0ZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDsgfVxuXG4ud3JhcCB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICBtYXJnaW46IGF1dG87IH1cblxuLndpZGV3cmFwcGVyIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1hcmdpbjogYXV0bzsgfVxuXG4uZmxleCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cblxuLmZsZXhfY29sIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cblxuLmZsZXhfY3RyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLnJhdGlvX291dGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEwMCU7IH0gfVxuXG4ucmF0aW9fMV8xIHtcbiAgICBAZXh0ZW5kIC5yYXRpb19vdXRlcjtcbiAgICAmOjphZnRlciB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlOyB9IH1cblxuLnJhdGlvXzJfMyB7XG4gICAgQGV4dGVuZCAucmF0aW9fb3V0ZXI7XG4gICAgJjo6YWZ0ZXIge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNjAlOyB9IH1cblxuLnJhdGlvXzNfNCB7XG4gICAgQGV4dGVuZCAucmF0aW9fb3V0ZXI7XG4gICAgJjo6YWZ0ZXIge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNzUlOyB9IH1cblxuLnJhdGlvXzFfMiB7XG4gICAgQGV4dGVuZCAucmF0aW9fb3V0ZXI7XG4gICAgJjo6YWZ0ZXIge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNTAlOyB9IH1cblxuLnJhdGlvX2lubmVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGltZyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyOyB9IH1cblxuXG4vLyBNQVJHRVNcbi5tYi0wNSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDsgfVxuXG4ubWItMSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDsgfVxuXG4ubWItMiB7XG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuXG4ubWItMyB7XG4gICAgbWFyZ2luLWJvdHRvbTogNjBweDsgfVxuXG4ubWItNCB7XG4gICAgbWFyZ2luLWJvdHRvbTogODBweDsgfVxuIiwiXG5ib2R5IHtcbiAgICBmb250LWZhbWlseTogJG9wZW5zYW5zOyB9XG5cbi50eHQtY3RyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLnR4dC1yZ3Qge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gICAgZm9udC1mYW1pbHk6ICRoaW5kOyB9XG5cbi5oXzIge1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBjb2xvcjogJGJsdWU7IH1cblxuLmhfMjEge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgY29sb3I6ICRibHVlX2RhcmtlcjtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBsaW5lLWhlaWdodDogMS40NGVtO1xuICAgIGxldHRlci1zcGFjaW5nOiAwcHg7IH1cblxuXG4uaF8zIHtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgbGluZS1oZWlnaHQ6IDEuNDRlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogMHB4O1xuICAgIGNvbG9yOiAkYmx1ZTsgfVxuXG4uaF80IHtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBjb2xvcjogJGJsdWU7IH1cblxuLmZ0XzEge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgICBjb2xvcjogJGdyYXk7XG4gICAgZm9udC1zaXplOiAuOXJlbTtcblxuICAgICYuZ3JlZW4ge1xuICAgICAgICBjb2xvcjogJGdyZWVuX2xpZ2h0OyB9XG5cbiAgICAmLmJsdWUge1xuICAgICAgICBjb2xvcjogJGJsdWU7IH0gfVxuXG4uZnRfMiB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiAuOXJlbTsgfVxuXG4uaWNvbiB7XG4gICAgcGFkZGluZzogM3B4O1xuICAgIHN2ZyB7XG4gICAgICAgIHdpZHRoOiAxZW07XG4gICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuXG5wIHtcbiAgICBjb2xvcjogIzVmNjU2ZDtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjY0M2VtO1xuICAgIHBhZGRpbmc6IDBweCAwcHggMHB4IDBweDtcbiAgICBtYXJnaW46IDBweCAwcHggMHB4IDBweDtcblxuICAgIC5lbnRyeS1jb250ZW50ICYge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9IH1cblxuLnNlcCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwYWRkaW5nOiAwIDVweDsgfVxuIiwiXG5cbi8vIENPTE9SU1xuXG4kZ3JheTogIzVmNjU2ZDtcbiRncmF5X2xpZ2h0OiAjZTZlOGU4O1xuJGdyYXlfbGlnaHRlcjogI2Y1ZjZmNjtcblxuJGJsdWU6ICMyYzM0ODQ7XG4kYmx1ZV9kYXJrOiAjMWMyMTU1O1xuJGJsdWVfZGFya2VyOiAjMDAyNzRlO1xuJGdyZWVuOiAjM2FhMzQyO1xuJGdyZWVuX2xpZ2h0OiAjM2FhMzQyO1xuJGdyZWVuX2xpZ2h0ZXI6ICM0ZmRlNzU7XG4keWVsbG93OiAjZmZjNzA0O1xuIiwiXG5cbi5jb3ZlciBpbWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG4iLCJcblxuLy8gSEVBRCBCUkFORFxuXG4uc2l0ZS1icmFuZGluZyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgcGFkZGluZzogOHB4IDA7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBAaW5jbHVkZSB1cC10byg4MDBweCkge1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7IH0gfVxuXG5cblxuLmhlYWRlcl9sb2dvIHtcbiAgICB3aWR0aDogMzUlO1xuICAgIEBpbmNsdWRlIHVwLXRvKDgwMHB4KSB7XG4gICAgICAgIHdpZHRoOiA0NSU7IH1cblxuICAgIGltZyB7XG4gICAgICAgIG1heC1oZWlnaHQ6IDgwcHg7XG4gICAgICAgIHdpZHRoOiBhdXRvOyB9IH1cblxuLmhlYWRlcl9jb250YWN0IHtcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRncmF5X2xpZ2h0O1xuICAgIEBpbmNsdWRlIHVwLXRvKDgwMHB4KSB7XG4gICAgICAgIHdpZHRoOiA0NSU7XG4gICAgICAgIG9yZGVyOiAzOyB9XG5cbiAgICBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICAgcGFkZGluZy10b3A6IDVweDsgfSB9XG5cbi5oZWFkZXJfbG9jYWxpc2F0aW9uIHtcbiAgICB3aWR0aDogMjAlO1xuICAgIEBpbmNsdWRlIHVwLXRvKDgwMHB4KSB7XG4gICAgICAgIHdpZHRoOiA0NSU7XG4gICAgICAgIG9yZGVyOiA0OyB9IH1cblxuXG5cblxuLy8gTkFWSUdBVElPTiBNRU5VXG5cbi5tYWluLW5hdmlnYXRpb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRibHVlO1xuICAgIHBhZGRpbmc6IDEwcHggMDtcblxuICAgIHVsIHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgIEBpbmNsdWRlIHVwLXRvKDgwMHB4KSB7XG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7IH1cblxuICAgICAgICBhIHtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkhpbmRcIiwgU2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDIzLjAwMnB4O1xuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuNTZweDtcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgICAgICAgICAgQGluY2x1ZGUgdXAtdG8oODAwcHgpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogN3B4IDMwcHg7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMnB4OyB9IH0gfSB9XG5cbiIsIi8qXG4gKiBNaXhpbnNcbiAqXG4gKiBAcGFja2FnZSBmZWdsXG4gKlxuICogZnJvbSBoZXJlIDogaHR0cDovL3dlYi1kZXNpZ24td2Vla2x5LmNvbS8yMDEzLzA1LzEyL2hhbmR5LXNhc3MtbWl4aW5zL1xuICogZnJvbSBib290c3RyYXBcbiAqIGZyb20gSW51aXQuc2Nzc1xuICogZm9ybWUgaHR0cHM6Ly9naXRodWIuY29tL3J5NW4vcmVtXG4gKlxuICovXG5cblxuXG5cblxuXG5cbi8vIFJlc3BvbnNpdmUgQnJlYWtwb2ludHNcbkBtaXhpbiBhdC1sZWFzdCgkcG9pbnQpIHtcbiAgQGlmICRwb2ludCA9PSB3aWRlIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJHdpZGVfYnJlYWtwb2ludCkge1xuICAgICAgQGNvbnRlbnQ7IH0gfVxuXG4gIEBlbHNlIGlmICRwb2ludCA9PSBsYXJnZSB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRsYXJnZV9icmVha3BvaW50KSB7XG4gICAgICBAY29udGVudDsgfSB9XG5cbiAgQGVsc2UgaWYgJHBvaW50ID09IG1lZGl1bSB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtZWRpdW1fYnJlYWtwb2ludCkge1xuICAgICAgQGNvbnRlbnQ7IH0gfVxuXG4gIEBlbHNlIGlmICRwb2ludCA9PSBtaW5pbWFsIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbmltYWxfYnJlYWtwb2ludCkge1xuICAgICAgQGNvbnRlbnQ7IH0gfVxuXG4gIEBlbHNlIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJHBvaW50KSB7XG4gICAgICBAY29udGVudDsgfSB9IH1cblxuXG5cbkBtaXhpbiB1cC10bygkcG9pbnQpIHtcbiAgQGlmICRwb2ludCA9PSB3aWRlIHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJHdpZGVfYnJlYWtwb2ludCkge1xuICAgICAgQGNvbnRlbnQ7IH0gfVxuXG4gIEBlbHNlIGlmICRwb2ludCA9PSBsYXJnZSB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRsYXJnZV9icmVha3BvaW50KSB7XG4gICAgICBAY29udGVudDsgfSB9XG5cbiAgQGVsc2UgaWYgJHBvaW50ID09IG1lZGl1bSB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZWRpdW1fYnJlYWtwb2ludCkge1xuICAgICAgIEBjb250ZW50OyB9IH1cblxuICBAZWxzZSB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRwb2ludCkge1xuICAgICAgQGNvbnRlbnQ7IH0gfSB9XG5cblxuXG5cbi8vIEJveC1zaXppbmdcbkBtaXhpbiBib3gtc2l6aW5nKCR0eXBlOiBcImJvcmRlclwiKSB7XG4gIC8qIEFjY2VwdGFibGUgdmFsdWVzIGFyZSBib3JkZXIsIGNvbnRlbnQsIGFuZCBwYWRkaW5nIC0gY29udGVudCBpcyB0aGUgZGVmYXVsdCBXM0MgbW9kZWwgKi9cbiAgYm94LXNpemluZzogI3skdHlwZS1ib3h9O1xuICAtd2Via2l0LWJveC1zaXppbmc6ICN7JHR5cGUtYm94fTtcbiAgLW1vei1ib3gtc2l6aW5nOiAjeyR0eXBlLWJveH07IH1cblxuXG5cbi8vIENsZWFyZml4XG5AbWl4aW4gY2xlYXJmaXgoKSB7XG4gIGNsZWFyOiBib3RoO1xuICAmOmJlZm9yZSxcbiAgJjphZnRlciB7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cblxuICAmOmFmdGVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjbGVhcjogYm90aDtcbiAgICAvL2hlaWdodDogMXB4XG4gICAgbWFyZ2luLXRvcDogLTFweDtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuICAmIHtcbiAgICAqem9vbTogMTsgfSB9XG5cblxuXG5cbkBtaXhpbiB3b3JkLXdyYXAoKSB7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIC13ZWJraXQtaHlwaGVuczogYXV0bztcbiAgLW1vei1oeXBoZW5zOiBhdXRvO1xuICAtbXMtaHlwaGVuczogYXV0bztcbiAgLW8taHlwaGVuczogYXV0bztcbiAgaHlwaGVuczogYXV0bzsgfVxuXG5cbkBtaXhpbiBlbGxpcHNpcygpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7IH1cblxuXG5cblxuLy8gQWJzb2x1dGUgcG9zaXRpb25lZFxuQG1peGluIGFicy1wb3MgKCR0b3A6IGF1dG8sICRyaWdodDogYXV0bywgJGJvdHRvbTogYXV0bywgJGxlZnQ6IGF1dG8pIHtcbiAgdG9wOiAkdG9wO1xuICByaWdodDogJHJpZ2h0O1xuICBib3R0b206ICRib3R0b207XG4gIGxlZnQ6ICRsZWZ0O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7IH1cblxuXG5cbi8vIEFib3NsdXRlIENlbnRlcmluZ1xuQG1peGluIGFicy1jZW50ZXJlZCAoKSB7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogNTAlO1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWFyZ2luOiBhdXRvO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDsgfVxuXG5cbi8vIGNlbnRlcmVkIGluIHZpZXdwb3J0XG5AbWl4aW4gYWJzLWNlbnRlcmVkLWZpeGVkICgpIHtcbiAgd2lkdGg6IDUwJTtcbiAgaGVpZ2h0OiA1MCU7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBtYXJnaW46IGF1dG87XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBib3R0b206IDA7XG4gIHJpZ2h0OiAwO1xuICB6LWluZGV4OiA5OTk7IH1cblxuXG5AbWl4aW4gYWJzLWNlbnRlcmVkLXJlc3BvbnNpdmUgKCkge1xuICB3aWR0aDogNjAlO1xuICBoZWlnaHQ6IDYwJTtcbiAgbWluLXdpZHRoOiA0MDBweDtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgcGFkZGluZzogNDBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1hcmdpbjogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7IH1cblxuXG5cblxuXG4vLyBPcGFjaXR5XG5cbkBtaXhpbiBvcGFjaXR5KCRvcGFjaXR5KSB7XG4gIGZpbHRlcjogdW5xdW90ZShcInByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5BbHBoYShPcGFjaXR5PSNyb3VuZCgkb3BhY2l0eSAqIDEwMCkpXCIpO1xuICAkb3BhY2l0eS1pZTogJG9wYWNpdHkgKiAxMDA7XG4gIGZpbHRlcjogYWxwaGEob3BhY2l0eT0kb3BhY2l0eS1pZSk7IC8vSUU4XG4gIG9wYWNpdHk6ICRvcGFjaXR5OyB9XG5cblxuLy8gRHJvcCBzaGFkb3dzXG5AbWl4aW4gYm94LXNoYWRvdygkc2hhZG93Li4uKSB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogJHNoYWRvdyB7XG4gICAgIC1tb3otYm94LXNoYWRvdzogJHNoYWRvdyB7XG4gICAgICAgICAgYm94LXNoYWRvdzogJHNoYWRvdzsgfSB9IH1cblxuXG4vLyBUcmFuc2l0aW9uc1xuQG1peGluIHRyYW5zaXRpb24oJHRyYW5zaXRpb24uLi4pIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAkdHJhbnNpdGlvbiB7XG4gICAgIC1tb3otdHJhbnNpdGlvbjogJHRyYW5zaXRpb24ge1xuICAgICAgIC1vLXRyYW5zaXRpb246ICR0cmFuc2l0aW9uIHtcbiAgICAgICAgICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjsgfSB9IH0gfVxuXG5AbWl4aW4gdHJhbnNpdGlvbi1kZWxheSgkdHJhbnNpdGlvbi1kZWxheSkge1xuICAtd2Via2l0LXRyYW5zaXRpb24tZGVsYXk6ICR0cmFuc2l0aW9uLWRlbGF5IHtcbiAgICAgLW1vei10cmFuc2l0aW9uLWRlbGF5OiAkdHJhbnNpdGlvbi1kZWxheSB7XG4gICAgICAgLW8tdHJhbnNpdGlvbi1kZWxheTogJHRyYW5zaXRpb24tZGVsYXkge1xuICAgICAgICAgIHRyYW5zaXRpb24tZGVsYXk6ICR0cmFuc2l0aW9uLWRlbGF5OyB9IH0gfSB9XG5cbkBtaXhpbiB0cmFuc2l0aW9uLWR1cmF0aW9uKCR0cmFuc2l0aW9uLWR1cmF0aW9uKSB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbi1kdXJhdGlvbjogJHRyYW5zaXRpb24tZHVyYXRpb24ge1xuICAgICAtbW96LXRyYW5zaXRpb24tZHVyYXRpb246ICR0cmFuc2l0aW9uLWR1cmF0aW9uIHtcbiAgICAgICAtby10cmFuc2l0aW9uLWR1cmF0aW9uOiAkdHJhbnNpdGlvbi1kdXJhdGlvbiB7XG4gICAgICAgICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogJHRyYW5zaXRpb24tZHVyYXRpb247IH0gfSB9IH1cblxuXG4vLyBUcmFuc2Zvcm1hdGlvbnNcbkBtaXhpbiByb3RhdGUoJGRlZ3JlZXMpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgkZGVncmVlcykge1xuICAgICAtbW96LXRyYW5zZm9ybTogcm90YXRlKCRkZWdyZWVzKSB7XG4gICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoJGRlZ3JlZXMpIHtcbiAgICAgICAtby10cmFuc2Zvcm06IHJvdGF0ZSgkZGVncmVlcykge1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKCRkZWdyZWVzKTsgfSB9IH0gfSB9XG5cbkBtaXhpbiBzY2FsZSgkcmF0aW8pIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKCRyYXRpbykge1xuICAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUoJHJhdGlvKSB7XG4gICAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgkcmF0aW8pIHtcbiAgICAgICAtby10cmFuc2Zvcm06IHNjYWxlKCRyYXRpbykge1xuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoJHJhdGlvKTsgfSB9IH0gfSB9XG5cbkBtaXhpbiB0cmFuc2xhdGUoJHgsICR5KSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KSB7XG4gICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KSB7XG4gICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KSB7XG4gICAgICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KSB7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KTsgfSB9IH0gfSB9XG5cbkBtaXhpbiBza2V3KCR4LCAkeSkge1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2tldygkeCwgJHkpIHtcbiAgICAgLW1vei10cmFuc2Zvcm06IHNrZXcoJHgsICR5KSB7XG4gICAgICAtbXMtdHJhbnNmb3JtOiBza2V3WCgkeCkgc2tld1koJHkpIHsgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90d2l0dGVyL2Jvb3RzdHJhcC9pc3N1ZXMvNDg4NVxuICAgICAgIC1vLXRyYW5zZm9ybTogc2tldygkeCwgJHkpIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHNrZXcoJHgsICR5KTsgfSB9IH0gfVxuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfSAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3R3aXR0ZXIvYm9vdHN0cmFwL2lzc3Vlcy81MzE5XG5cbkBtaXhpbiB0cmFuc2xhdGUzZCgkeCwgJHksICR6KSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgkeCwgJHksICR6KSB7XG4gICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgkeCwgJHksICR6KSB7XG4gICAgICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgkeCwgJHksICR6KSB7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgkeCwgJHksICR6KTsgfSB9IH0gfVxuXG5cblxuLy8gQm9yZGVyIHJhZGl1c1xuXG5AbWl4aW4gYm9yZGVyLXJhZGl1cygkcmFkaXVzKSB7XG4gIEBpbmNsdWRlIGNzczMtcHJlZml4KCdib3JkZXItcmFkaXVzJywgJHJhZGl1cyk7XG4gIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3ggIC8qIHN0b3BzIGJnIGNvbG9yIGZyb20gbGVha2luZyBvdXRzaWRlIHRoZSBib3JkZXI6ICovOyB9XG5cblxuLy8gU2luZ2xlIHNpZGUgYm9yZGVyLXJhZGl1c1xuXG5AbWl4aW4gYm9yZGVyLXRvcC1yYWRpdXMoJHJhZGl1cykge1xuICAtd2Via2l0LWJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAkcmFkaXVzO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHJhZGl1cyB7XG4gICAtd2Via2l0LWJvcmRlci10b3AtbGVmdC1yYWRpdXM6ICRyYWRpdXM7XG4gICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAkcmFkaXVzO1xuICAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgfSB9XG5cbkBtaXhpbiBib3JkZXItcmlnaHQtcmFkaXVzKCRyYWRpdXMpIHtcbiAgLXdlYmtpdC1ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogJHJhZGl1cztcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6ICRyYWRpdXMge1xuICAgICAtd2Via2l0LWJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAkcmFkaXVzO1xuICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHJhZGl1cztcbiAgICAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgfSB9XG5cbkBtaXhpbiBib3JkZXItYm90dG9tLXJhZGl1cygkcmFkaXVzKSB7XG4gIC13ZWJraXQtYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6ICRyYWRpdXM7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAkcmFkaXVzIHtcbiAgIC13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJHJhZGl1cztcbiAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6ICRyYWRpdXM7XG4gICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OyB9IH1cblxuQG1peGluIGJvcmRlci1sZWZ0LXJhZGl1cygkcmFkaXVzKSB7XG4gIC13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJHJhZGl1cztcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJHJhZGl1cyB7XG4gICAgIC13ZWJraXQtYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHJhZGl1cztcbiAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHJhZGl1cztcbiAgICAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgfSB9XG5cblxuXG4vLyBQbGFjZWhvbGRlciB0ZXh0XG5cbkBtaXhpbiBwbGFjZWhvbGRlcigkY29sb3I6ICRncmF5X2xpZ2h0ZXIpIHtcbiAgJjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICBjb2xvcjogJGNvbG9yOyB9XG5cblxuICAmOi1tb3otcGxhY2Vob2xkZXIge1xuICAgICBjb2xvcjogJGNvbG9yOyB9XG5cblxuICAmOjotbW96LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogJGNvbG9yOyB9XG5cblxuICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICRjb2xvcjsgfSB9XG5cblxuXG5cblxuLy8gV2Via2l0LXN0eWxlIGZvY3VzXG5cbkBtaXhpbiB0YWItZm9jdXMoKSB7XG4gIC8vIERlZmF1bHRcbiAgb3V0bGluZTogdGhpbiBkb3R0ZWQgIzMzMztcbiAgLy8gV2Via2l0XG4gIG91dGxpbmU6IDVweCBhdXRvIC13ZWJraXQtZm9jdXMtcmluZy1jb2xvcjtcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IH1cblxuXG5cbi8vIElFNyBpbmxpbmUtYmxvY2tcbkBtaXhpbiBpZTctaW5saW5lLWJsb2NrKCkge1xuICAqZGlzcGxheTogaW5saW5lO1xuICAqem9vbTogMTsgfVxuXG5cblxuXG4vLyBWZXJ0aWNhbCBncmFkaWVudCwgZnJvbSB0b3AgdG8gYm90dG9tXG4vL1xuLy8gQ3JlYXRlcyB0d28gY29sb3Igc3RvcHMsIHN0YXJ0IGFuZCBlbmQsIGJ5IHNwZWNpZnlpbmcgYSBjb2xvciBhbmQgcG9zaXRpb24gZm9yIGVhY2ggY29sb3Igc3RvcC5cbi8vIENvbG9yIHN0b3BzIGFyZSBub3QgYXZhaWxhYmxlIGluIElFOSBhbmQgYmVsb3cuXG5AbWl4aW4gZ3JhZGllbnQtdmVydGljYWwoJHN0YXJ0LWNvbG9yOiAjNTU1LCAkZW5kLWNvbG9yOiAjMzMzLCAkc3RhcnQtcGVyY2VudDogMCUsICRlbmQtcGVyY2VudDogMTAwJSkge1xuICBiYWNrZ3JvdW5kOiAkc3RhcnQtY29sb3I7XG4gIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgJHN0YXJ0LWNvbG9yICRzdGFydC1wZXJjZW50LCAkZW5kLWNvbG9yICRlbmQtcGVyY2VudCk7ICAvLyBTYWZhcmkgNS4xLTYsIENocm9tZSAxMCtcbiAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KHRvcCwgJHN0YXJ0LWNvbG9yICRzdGFydC1wZXJjZW50LCAkZW5kLWNvbG9yICRlbmQtcGVyY2VudCk7ICAvLyBPcGVyYSAxMlxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAkc3RhcnQtY29sb3IgJHN0YXJ0LXBlcmNlbnQsICRlbmQtY29sb3IgJGVuZC1wZXJjZW50KTsgLy8gU3RhbmRhcmQsIElFMTAsIEZpcmVmb3ggMTYrLCBPcGVyYSAxMi4xMCssIFNhZmFyaSA3KywgQ2hyb21lIDI2K1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyNpZS1oZXgtc3RyKCRzdGFydC1jb2xvciknLCBlbmRDb2xvcnN0cj0nI2llLWhleC1zdHIoJGVuZC1jb2xvciknLCBHcmFkaWVudFR5cGU9MCk7IH0gLy8gSUU5IGFuZCBkb3duXG5cblxuXG4vKipcbiAqIENvdXJ0ZXN5IG9mIEBpbnRlZ3JhbGlzdDogdHdpdHRlci5jb20vaW50ZWdyYWxpc3Qvc3RhdHVzLzI2MDQ4NDExNTMxNTQzNzU2OVxuICovXG5AbWl4aW4ga2V5ZnJhbWUgKCRhbmltYXRpb24tbmFtZSkge1xuICAgIEAtd2Via2l0LWtleWZyYW1lcyAkYW5pbWF0aW9uLW5hbWUge1xuICAgICAgICBAY29udGVudDsgfVxuXG5cbiAgICBALW1vei1rZXlmcmFtZXMgJGFuaW1hdGlvbi1uYW1lIHtcbiAgICAgICAgQGNvbnRlbnQ7IH1cblxuXG4gICAgQC1tcy1rZXlmcmFtZXMgJGFuaW1hdGlvbi1uYW1lIHtcbiAgICAgICAgQGNvbnRlbnQ7IH1cblxuXG4gICAgQC1vLWtleWZyYW1lcyAkYW5pbWF0aW9uLW5hbWUge1xuICAgICAgICBAY29udGVudDsgfVxuXG5cbiAgICBAa2V5ZnJhbWVzICRhbmltYXRpb24tbmFtZSB7XG4gICAgICAgIEBjb250ZW50OyB9IH1cblxuXG5cblxuIiwiXG5cbmEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzOyB9XG5cbi5saW5rX2Jsb2NrIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICAmOmhvdmVyIHtcbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4ICRncmF5X2xpZ2h0OyB9IH0gfVxuXG4uYnRuLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmVlbjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBwYWRkaW5nOiAxNXB4IDMwcHg7XG4gICAgZm9udC1zaXplOiAuOXJlbTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcblxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmx1ZTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyOyB9IH1cblxuLmJ0bi0td2hpdGUge1xuICAgIEBleHRlbmQgLmJ0bjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogJGJsdWU7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgY29sb3I6IHdoaXRlOyB9IH1cblxuLmJ0bi0teWVsbG93IHtcbiAgICBAZXh0ZW5kIC5idG47XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHllbGxvdztcblxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnID4nO1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBmb250LXNpemU6IC44O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7IH0gfVxuXG4iLCIvKlxuICogRm9ybSAmIElucHV0c1xuICovXG5cblxuaW5wdXRbdHlwZT1cInRleHRcIl0sXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdLFxudGV4dGFyZWEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5X2xpZ2h0ZXI7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRncmF5X2xpZ2h0O1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbmxhYmVsIHtcbiAgICBjb2xvcjogJGdyYXk7XG4gICAgZm9udC1zaXplOiAxcmVtOyB9XG5cblxuXG5cbiIsIlxuLnNlY3Rpb24ge1xuICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbi5zZWN0aW9uX3RpdGxlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ0ZW07XG4gICAgY29sb3I6ICRibHVlO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IC0xNXB4O1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgICB3aWR0aDogMjBweDtcbiAgICAgICAgaGVpZ2h0OiAzcHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmVlbl9saWdodDsgfSB9XG5cbmgyLnNjcmVlbi1yZWFkZXItdGV4dCB7XG4gICAgQGV4dGVuZCAuc2VjdGlvbl90aXRsZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDsgfVxuXG5cbi8vIFdJREVQQU5FTFxuXG4uc2VjdGlvbi53aWRlcGFuZWwge1xuXG4gICAgLnNlY3Rpb25fY292ZXIge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwuMyk7IH0gfVxuXG4gICAgaW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogNjAwcHg7XG4gICAgICAgIGhlaWdodDogNjB2aDtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIEBpbmNsdWRlIHVwLXRvKDgwMHB4KSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMHZoOyB9IH1cblxuXG4gICAgLnNlY3Rpb25fdGl0bGUge1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbiAgICAuc2VjdGlvbl9jb250ZW50IHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB6LWluZGV4OiA5OTk7XG4gICAgICAgIHRvcDogMzAlO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMzBweDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgJHllbGxvdztcbiAgICAgICAgbWF4LXdpZHRoOiA5MDBweDtcbiAgICAgICAgQGluY2x1ZGUgdXAtdG8oODAwcHgpIHtcbiAgICAgICAgICAgIHRvcDogMzBweDtcbiAgICAgICAgICAgIHJpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgbGVmdDogMjBweDsgfVxuXG4gICAgICAgIHAge1xuICAgICAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7IH0gfVxuXG4gICAgLnNlY3Rpb25fYWN0aW9uIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMjBweDsgfSB9XG5cblxuXG5cblxuXG4vLyBMT0dPU1xuXG4uc2VjdGlvbi5sb2dvcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXlfbGlnaHRlcjtcbiAgICBwYWRkaW5nLXRvcDogNjBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcblxuICAgIC5zZWN0aW9uX3RpdGxlIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuXG4gICAgLmxvZ29zX2xpc3Qge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgICBtYXgtaGVpZ2h0OiAxNTBweDtcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAxNTBweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwOyB9IH0gfVxuXG5cbi8vIE5FV1NcblxuLnNlY3Rpb24ubmV3cyB7XG4gICAgcGFkZGluZzogNDBweCAwIDIwcHg7XG5cbiAgICAubmV3c190aXRsZSB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBib3R0b206IC0xNXB4O1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW5fbGlnaHQ7IH0gfVxuXG5cblxuICAgIC5jYXJkX2NvdmVyIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsgfSB9XG5cblxuXG5cblxuXG5cbi8vIFNFUlZJQ0VTXG5cbi5zZWN0aW9uLnNlcnZpY2VzIHtcbiAgICBwYWRkaW5nLXRvcDogNjBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcblxuICAgIC5zZXJ2aWNlX3RpdGxlIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbiAgICAuY2FyZF9jb3ZlciB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IH1cblxuICAgIC5saW5rX2Jsb2NrOmhvdmVyIHtcbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmU7IH0gfVxuXG4gICAgLnNlcnZpY2VfY2FyZDpob3ZlciB7XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4ICRncmF5X2xpZ2h0OyB9IH1cblxuXG4uc2VydmljZV90aXRsZSB7XG4gICAgcGFkZGluZzogMTVweCAwOyB9XG5cblxuLnNlY3Rpb25fY2FyZHMge1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luLXRvcDogMjVweDtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIC5zZXJ2aWNlX2NhcmQge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheV9saWdodGVyO1xuICAgICAgICBwYWRkaW5nOiAxNXB4O1xuXG4gICAgICAgIC5jYXJkX2NvdmVyOmFmdGVyIHtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiA3MCU7IH1cblxuICAgICAgICBwIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTsgfVxuXG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgY29sb3I6ICR5ZWxsb3c7IH1cblxuICAgICAgICAuY2FyZF9leGNlcnB0IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4gICAgLm5ld3NfY2FyZCB7XG4gICAgICAgIGZsZXg6IDAgMCAyNCU7XG4gICAgICAgIHdpZHRoOiAyNCU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDQlO1xuICAgICAgICBAaW5jbHVkZSB1cC10byg4MDBweCkge1xuICAgICAgICAgICAgZmxleDogMCAwIDQ4JTtcbiAgICAgICAgICAgIHdpZHRoOiA0OCU7IH1cblxuXG4gICAgICAgIC5uZXdzX3RpdGxlIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDI1cHg7IH0gfSB9XG5cblxuLnNlY3Rpb25fY2FyZHMtLWhhbGYge1xuICAgIEBleHRlbmQgLnNlY3Rpb25fY2FyZHM7XG5cbiAgICAuc2VydmljZV9jYXJkIHtcbiAgICAgICAgZmxleDogMCAwIDQ4JTtcbiAgICAgICAgd2lkdGg6IDQ4JTtcbiAgICAgICAgcGFkZGluZzogMzBweDtcbiAgICAgICAgbWF4LXdpZHRoOiBub25lICFpbXBvcnRhbnQ7XG5cbiAgICAgICAgLmNhcmRfZXhjZXJwdCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG5cbiAgICAubmV3c19jYXJkIHtcbiAgICAgICAgZmxleDogMCAwIDQ4JTtcbiAgICAgICAgd2lkdGg6IDQ4JTsgfSB9XG5cbi5zZWN0aW9uX2NhcmRzLS10aGlyZCB7XG4gICAgQGV4dGVuZCAuc2VjdGlvbl9jYXJkcztcblxuICAgIC5zZXJ2aWNlX2NhcmQge1xuICAgICAgICBmbGV4OiAwIDAgMzIlO1xuICAgICAgICB3aWR0aDogMzIlO1xuICAgICAgICBwYWRkaW5nOiAzMHB4O1xuXG4gICAgICAgIC5jYXJkX2V4Y2VycHQge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuXG4gICAgLm5ld3NfY2FyZCB7XG4gICAgICAgIGZsZXg6IDAgMCAzMiU7XG4gICAgICAgIHdpZHRoOiAzMiU7XG4gICAgICAgIEBpbmNsdWRlIHVwLXRvKDgwMHB4KSB7XG4gICAgICAgICAgICBmbGV4OiAwIDAgNDglO1xuICAgICAgICAgICAgd2lkdGg6IDQ4JTtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDQlOyB9IH0gfVxuIiwiLyogU2xpZGVyICovXG5cbi5zbGljay1zbGlkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7XG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLW1zLXRvdWNoLWFjdGlvbjogcGFuLXk7XG4gICAgdG91Y2gtYWN0aW9uOiBwYW4teTtcbiAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi5zbGljay1saXN0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogbm9uZTsgfVxuXG5cbiAgICAmLmRyYWdnaW5nIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBjdXJzb3I6IGhhbmQ7IH0gfVxuXG5cbi5zbGljay1zbGlkZXIgLnNsaWNrLXRyYWNrLFxuLnNsaWNrLXNsaWRlciAuc2xpY2stbGlzdCB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7IH1cblxuXG4uc2xpY2stdHJhY2sge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgJjpiZWZvcmUsXG4gICAgJjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlOyB9XG5cblxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjbGVhcjogYm90aDsgfVxuXG5cbiAgICAuc2xpY2stbG9hZGluZyAmIHtcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuOyB9IH1cblxuXG4uc2xpY2stc2xpZGUge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtaW4taGVpZ2h0OiAxcHg7XG4gICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0OyB9XG5cbiAgICBpbWcge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWF4LWhlaWdodDogNTUwcHg7XG4gICAgICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICAgICAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvbnRhaW47IH1cblxuICAgICYuc2xpY2stbG9hZGluZyBpbWcge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9XG5cbiAgICBmaWdjYXB0aW9uIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICAgICAgICBmb250LXNpemU6IC45cmVtO1xuICAgICAgICBjb2xvcjogZ3JheTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbiAgICAmLmRyYWdnaW5nIGltZyB7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG5cblxuICAgIC5zbGljay1pbml0aWFsaXplZCAmIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cblxuXG4gICAgLnNsaWNrLWxvYWRpbmcgJiB7XG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjsgfVxuXG5cbiAgICAuc2xpY2stdmVydGljYWwgJiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50OyB9IH1cblxuXG4uc2xpY2stYXJyb3cuc2xpY2staGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG5cblxuXG5AY2hhcnNldCBcIlVURi04XCI7XG5cbi8vIERlZmF1bHQgVmFyaWFibGVzXG5cbi8vIFNsaWNrIGljb24gZW50aXR5IGNvZGVzIG91dHB1dHMgdGhlIGZvbGxvd2luZ1xuLy8gXCJcXDIxOTBcIiBvdXRwdXRzIGFzY2lpIGNoYXJhY3RlciBcIuKGkFwiXG4vLyBcIlxcMjE5MlwiIG91dHB1dHMgYXNjaWkgY2hhcmFjdGVyIFwi4oaSXCJcbi8vIFwiXFwyMDIyXCIgb3V0cHV0cyBhc2NpaSBjaGFyYWN0ZXIgXCLigKJcIlxuXG4kc2xpY2stZm9udC1wYXRoOiBcIi4vZm9udHMvXCIgIWRlZmF1bHQ7XG4kc2xpY2stZm9udC1mYW1pbHk6IFwic2xpY2tcIiAhZGVmYXVsdDtcbiRzbGljay1sb2FkZXItcGF0aDogXCIuL1wiICFkZWZhdWx0O1xuJHNsaWNrLWFycm93LWNvbG9yOiB3aGl0ZSAhZGVmYXVsdDtcbiRzbGljay1kb3QtY29sb3I6IGJsYWNrICFkZWZhdWx0O1xuJHNsaWNrLWRvdC1jb2xvci1hY3RpdmU6ICRzbGljay1kb3QtY29sb3IgIWRlZmF1bHQ7XG4kc2xpY2stcHJldi1jaGFyYWN0ZXI6IFwiXFwyMTkwXCIgIWRlZmF1bHQ7XG4kc2xpY2stbmV4dC1jaGFyYWN0ZXI6IFwiXFwyMTkyXCIgIWRlZmF1bHQ7XG4kc2xpY2stZG90LWNoYXJhY3RlcjogXCJcXDIwMjJcIiAhZGVmYXVsdDtcbiRzbGljay1kb3Qtc2l6ZTogNnB4ICFkZWZhdWx0O1xuJHNsaWNrLW9wYWNpdHktZGVmYXVsdDogMC43NSAhZGVmYXVsdDtcbiRzbGljay1vcGFjaXR5LW9uLWhvdmVyOiAxICFkZWZhdWx0O1xuJHNsaWNrLW9wYWNpdHktbm90LWFjdGl2ZTogMC4yNSAhZGVmYXVsdDtcblxuQGZ1bmN0aW9uIHNsaWNrLWltYWdlLXVybCgkdXJsKSB7XG4gICAgQGlmIGZ1bmN0aW9uLWV4aXN0cyhpbWFnZS11cmwpIHtcbiAgICAgICAgQHJldHVybiBpbWFnZS11cmwoJHVybCk7IH1cblxuICAgIEBlbHNlIHtcbiAgICAgICAgQHJldHVybiB1cmwoJHNsaWNrLWxvYWRlci1wYXRoICsgJHVybCk7IH0gfVxuXG5cblxuQGZ1bmN0aW9uIHNsaWNrLWZvbnQtdXJsKCR1cmwpIHtcbiAgICBAaWYgZnVuY3Rpb24tZXhpc3RzKGZvbnQtdXJsKSB7XG4gICAgICAgIEByZXR1cm4gZm9udC11cmwoJHVybCk7IH1cblxuICAgIEBlbHNlIHtcbiAgICAgICAgQHJldHVybiB1cmwoJHNsaWNrLWZvbnQtcGF0aCArICR1cmwpOyB9IH1cblxuXG5cbi8qIFNsaWRlciAqL1xuXG4uc2xpY2stbGlzdCB7XG4gICAgLnNsaWNrLWxvYWRpbmcgJiB7XG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmYgc2xpY2staW1hZ2UtdXJsKFwiYWpheC1sb2FkZXIuZ2lmXCIpIGNlbnRlciBjZW50ZXIgbm8tcmVwZWF0OyB9IH1cblxuXG5cbi8qIEljb25zICovXG5AaWYgJHNsaWNrLWZvbnQtZmFtaWx5ID09IFwic2xpY2tcIiB7XG4gICAgQGZvbnQtZmFjZSB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBcInNsaWNrXCI7XG4gICAgICAgIHNyYzogc2xpY2stZm9udC11cmwoXCJzbGljay5lb3RcIik7XG4gICAgICAgIHNyYzogc2xpY2stZm9udC11cmwoXCJzbGljay5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCBzbGljay1mb250LXVybChcInNsaWNrLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgc2xpY2stZm9udC11cmwoXCJzbGljay50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHNsaWNrLWZvbnQtdXJsKFwic2xpY2suc3ZnI3NsaWNrXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsOyB9IH1cblxuXG5cbi8qIEFycm93cyAqL1xuXG4uc2xpY2stcHJldixcbi5zbGljay1uZXh0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgdG9wOiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGNvbG9yOiBibGFjaztcbiAgICB6LWluZGV4OiA5OTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgJjpob3ZlciwgJjpmb2N1cyB7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cblxuICAgICYuc2xpY2stZGlzYWJsZWQ6YmVmb3JlIHtcbiAgICAgICAgb3BhY2l0eTogJHNsaWNrLW9wYWNpdHktbm90LWFjdGl2ZTsgfVxuXG4gICAgc3BhbiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMzBweDsgfVxuICAgIHAge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE7IH0gfVxuXG4uc2xpY2stcHJldiB7XG4gICAgbGVmdDogLTQwcHg7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgcCB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtMTZweDsgfSB9XG5cbi5zbGljay1uZXh0IHtcbiAgICByaWdodDogLTQwcHg7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgIHAge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IC0xMHB4OyB9IH1cblxuXG4vKiBEb3RzICovXG5cbi5zbGljay1kb3R0ZWQuc2xpY2stc2xpZGVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG5cblxuLnNsaWNrLWRvdHMge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IC0yNXB4O1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGxpIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGhlaWdodDogMjBweDtcbiAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgIG1hcmdpbjogMCA1cHg7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgYnV0dG9uIHtcbiAgICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICB3aWR0aDogMjBweDtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAwcHg7XG4gICAgICAgICAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAmOmhvdmVyLCAmOmZvY3VzIHtcbiAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogJHNsaWNrLW9wYWNpdHktb24taG92ZXI7IH0gfVxuXG5cbiAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICAgICAgY29udGVudDogJHNsaWNrLWRvdC1jaGFyYWN0ZXI7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAkc2xpY2stZm9udC1mYW1pbHk7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAkc2xpY2stZG90LXNpemU7XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkc2xpY2stZG90LWNvbG9yO1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6ICRzbGljay1vcGFjaXR5LW5vdC1hY3RpdmU7XG4gICAgICAgICAgICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgICAgICAgICAgICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsgfSB9XG5cblxuICAgICAgICAmLnNsaWNrLWFjdGl2ZSBidXR0b246YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbG9yOiAkc2xpY2stZG90LWNvbG9yLWFjdGl2ZTtcbiAgICAgICAgICAgIG9wYWNpdHk6ICRzbGljay1vcGFjaXR5LWRlZmF1bHQ7IH0gfSB9XG5cblxuXG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG4vKlxuICogTWl4aW5zXG4gKlxuICogQHBhY2thZ2UgZmVnbFxuICpcbiAqIGZyb20gaGVyZSA6IGh0dHA6Ly93ZWItZGVzaWduLXdlZWtseS5jb20vMjAxMy8wNS8xMi9oYW5keS1zYXNzLW1peGlucy9cbiAqIGZyb20gYm9vdHN0cmFwXG4gKiBmcm9tIEludWl0LnNjc3NcbiAqIGZvcm1lIGh0dHBzOi8vZ2l0aHViLmNvbS9yeTVuL3JlbVxuICpcbiAqL1xuLyoqXG4gKiBDb3VydGVzeSBvZiBAaW50ZWdyYWxpc3Q6IHR3aXR0ZXIuY29tL2ludGVncmFsaXN0L3N0YXR1cy8yNjA0ODQxMTUzMTU0Mzc1NjlcbiAqL1xuLyogQm94IHNpemluZyBydWxlcyAqL1xuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4vKiBSZW1vdmUgZGVmYXVsdCBwYWRkaW5nICovXG51bFtjbGFzc10sXG5vbFtjbGFzc10ge1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qIFJlbW92ZSBkZWZhdWx0IG1hcmdpbiAqL1xuYm9keSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxucCxcbnVsW2NsYXNzXSxcbm9sW2NsYXNzXSxcbmxpLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmJsb2NrcXVvdGUsXG5kbCxcbmRkIHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIFNldCBjb3JlIGJvZHkgZGVmYXVsdHMgKi9cbmJvZHkge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZVNwZWVkO1xuICBsaW5lLWhlaWdodDogMS41OyB9XG5cbi8qIFJlbW92ZSBsaXN0IHN0eWxlcyBvbiB1bCwgb2wgZWxlbWVudHMgd2l0aCBhIGNsYXNzIGF0dHJpYnV0ZSAqL1xudWxbY2xhc3NdLFxub2xbY2xhc3NdIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG4vKiBBIGVsZW1lbnRzIHRoYXQgZG9uJ3QgaGF2ZSBhIGNsYXNzIGdldCBkZWZhdWx0IHN0eWxlcyAqL1xuYTpub3QoW2NsYXNzXSkge1xuICB0ZXh0LWRlY29yYXRpb24tc2tpcC1pbms6IGF1dG87IH1cblxuLyogTWFrZSBpbWFnZXMgZWFzaWVyIHRvIHdvcmsgd2l0aCAqL1xuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qIE5hdHVyYWwgZmxvdyBhbmQgcmh5dGhtIGluIGFydGljbGVzIGJ5IGRlZmF1bHQgKi9cbmFydGljbGUgPiAqICsgKiB7XG4gIG1hcmdpbi10b3A6IDFlbTsgfVxuXG4vKiBJbmhlcml0IGZvbnRzIGZvciBpbnB1dHMgYW5kIGJ1dHRvbnMgKi9cbmlucHV0LFxuYnV0dG9uLFxudGV4dGFyZWEsXG5zZWxlY3Qge1xuICBmb250OiBpbmhlcml0OyB9XG5cbi8qIFJlbW92ZSBhbGwgYW5pbWF0aW9ucyBhbmQgdHJhbnNpdGlvbnMgZm9yIHBlb3BsZSB0aGF0IHByZWZlciBub3QgdG8gc2VlIHRoZW0gKi9cbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKSB7XG4gICoge1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC4wMW1zICFpbXBvcnRhbnQ7XG4gICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMSAhaW1wb3J0YW50O1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMDFtcyAhaW1wb3J0YW50O1xuICAgIHNjcm9sbC1iZWhhdmlvcjogYXV0byAhaW1wb3J0YW50OyB9IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlblNhbnMnO1xuICBzcmM6IHVybChcImFzc2V0cy9mb250cy9PcGVuX1NhbnMvT3BlblNhbnMtQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiA5MDA7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlblNhbnMnO1xuICBzcmM6IHVybChcImFzc2V0cy9mb250cy9PcGVuX1NhbnMvT3BlblNhbnMtUmVndWxhci50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlblNhbnMnO1xuICBzcmM6IHVybChcImFzc2V0cy9mb250cy9PcGVuX1NhbnMvT3BlblNhbnMtTGlnaHQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXdlaWdodDogMTAwOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0hpbmQnO1xuICBzcmM6IHVybChcImFzc2V0cy9mb250cy9IaW5kL0hpbmQtUmVndWxhci50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnSGluZCc7XG4gIHNyYzogdXJsKFwiYXNzZXRzL2ZvbnRzL0hpbmQvSGluZC1TZW1pQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTAwJTsgfVxuXG5ib2R5IHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgfVxuXG4uc2l0ZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbWluLWhlaWdodDogMTAwdmg7IH1cblxuLndyYXAge1xuICB3aWR0aDogOTAlO1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgbWFyZ2luOiBhdXRvOyB9XG5cbi53aWRld3JhcHBlciB7XG4gIHdpZHRoOiA5MCU7XG4gIG1hcmdpbjogYXV0bzsgfVxuXG4uZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuXG4uZmxleF9jb2wge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG5cbi5mbGV4X2N0ciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLnJhdGlvX291dGVyLCAucmF0aW9fMV8xLCAucmF0aW9fMl8zLCAucmF0aW9fM180LCAucmF0aW9fMV8yIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTsgfVxuICAucmF0aW9fb3V0ZXI6OmFmdGVyLCAucmF0aW9fMV8xOjphZnRlciwgLnJhdGlvXzJfMzo6YWZ0ZXIsIC5yYXRpb18zXzQ6OmFmdGVyLCAucmF0aW9fMV8yOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTsgfVxuXG4ucmF0aW9fMV8xOjphZnRlciB7XG4gIHBhZGRpbmctYm90dG9tOiAxMDAlOyB9XG5cbi5yYXRpb18yXzM6OmFmdGVyIHtcbiAgcGFkZGluZy1ib3R0b206IDYwJTsgfVxuXG4ucmF0aW9fM180OjphZnRlciB7XG4gIHBhZGRpbmctYm90dG9tOiA3NSU7IH1cblxuLnJhdGlvXzFfMjo6YWZ0ZXIge1xuICBwYWRkaW5nLWJvdHRvbTogNTAlOyB9XG5cbi5yYXRpb19pbm5lciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuICAucmF0aW9faW5uZXIgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb2JqZWN0LWZpdDogY292ZXI7IH1cblxuLm1iLTA1IHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDsgfVxuXG4ubWItMSB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7IH1cblxuLm1iLTIge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG5cbi5tYi0zIHtcbiAgbWFyZ2luLWJvdHRvbTogNjBweDsgfVxuXG4ubWItNCB7XG4gIG1hcmdpbi1ib3R0b206IDgwcHg7IH1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW5TYW5zXCIsIGFyaWFsLCBzYW5zLXNlcmlmOyB9XG5cbi50eHQtY3RyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi50eHQtcmd0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC1mYW1pbHk6IFwiSGluZFwiLCBhcmlhbCwgc2Fucy1zZXJpZjsgfVxuXG4uaF8yIHtcbiAgZm9udC1zaXplOiAyOHB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGNvbG9yOiAjMmMzNDg0OyB9XG5cbi5oXzIxIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgY29sb3I6ICMwMDI3NGU7XG4gIGZvbnQtc2l6ZTogMjJweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGluZS1oZWlnaHQ6IDEuNDRlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDBweDsgfVxuXG4uaF8zIHtcbiAgZm9udC1zaXplOiAyMnB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbGluZS1oZWlnaHQ6IDEuNDRlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDBweDtcbiAgY29sb3I6ICMyYzM0ODQ7IH1cblxuLmhfNCB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGNvbG9yOiAjMmMzNDg0OyB9XG5cbi5mdF8xIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgY29sb3I6ICM1ZjY1NmQ7XG4gIGZvbnQtc2l6ZTogLjlyZW07IH1cbiAgLmZ0XzEuZ3JlZW4ge1xuICAgIGNvbG9yOiAjM2FhMzQyOyB9XG4gIC5mdF8xLmJsdWUge1xuICAgIGNvbG9yOiAjMmMzNDg0OyB9XG5cbi5mdF8yIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogLjlyZW07IH1cblxuLmljb24ge1xuICBwYWRkaW5nOiAzcHg7IH1cbiAgLmljb24gc3ZnIHtcbiAgICB3aWR0aDogMWVtO1xuICAgIGhlaWdodDogMWVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG5wIHtcbiAgY29sb3I6ICM1ZjY1NmQ7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBsaW5lLWhlaWdodDogMS42NDNlbTtcbiAgcGFkZGluZzogMHB4IDBweCAwcHggMHB4O1xuICBtYXJnaW46IDBweCAwcHggMHB4IDBweDsgfVxuICAuZW50cnktY29udGVudCBwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG5cbi5zZXAge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMCA1cHg7IH1cblxuLmNvdmVyIGltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuXG4uc2l0ZS1icmFuZGluZyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgcGFkZGluZzogOHB4IDA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLnNpdGUtYnJhbmRpbmcge1xuICAgICAgZmxleC13cmFwOiB3cmFwOyB9IH1cblxuLmhlYWRlcl9sb2dvIHtcbiAgd2lkdGg6IDM1JTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAuaGVhZGVyX2xvZ28ge1xuICAgICAgd2lkdGg6IDQ1JTsgfSB9XG4gIC5oZWFkZXJfbG9nbyBpbWcge1xuICAgIG1heC1oZWlnaHQ6IDgwcHg7XG4gICAgd2lkdGg6IGF1dG87IH1cblxuLmhlYWRlcl9jb250YWN0IHtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2U2ZThlODsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAuaGVhZGVyX2NvbnRhY3Qge1xuICAgICAgd2lkdGg6IDQ1JTtcbiAgICAgIG9yZGVyOiAzOyB9IH1cbiAgLmhlYWRlcl9jb250YWN0IHNwYW4ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBwYWRkaW5nLXRvcDogNXB4OyB9XG5cbi5oZWFkZXJfbG9jYWxpc2F0aW9uIHtcbiAgd2lkdGg6IDIwJTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAuaGVhZGVyX2xvY2FsaXNhdGlvbiB7XG4gICAgICB3aWR0aDogNDUlO1xuICAgICAgb3JkZXI6IDQ7IH0gfVxuXG4ubWFpbi1uYXZpZ2F0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJjMzQ4NDtcbiAgcGFkZGluZzogMTBweCAwOyB9XG4gIC5tYWluLW5hdmlnYXRpb24gdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAgIC5tYWluLW5hdmlnYXRpb24gdWwge1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7IH0gfVxuICAgIC5tYWluLW5hdmlnYXRpb24gdWwgYSB7XG4gICAgICBmb250LWZhbWlseTogXCJIaW5kXCIsIFNhbnMtc2VyaWY7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMy4wMDJweDtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAwLjU2cHg7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBwYWRkaW5nOiA1cHggMTBweDsgfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgICAgIC5tYWluLW5hdmlnYXRpb24gdWwgYSB7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIHBhZGRpbmc6IDdweCAzMHB4O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMjJweDsgfSB9XG5cbi8qXG4gKiBGT09URVIgU1RZTEVTXG4gKi9cbi5zaXRlLWZvb3RlciB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYzM0ODQ7XG4gIGNvbG9yOiAjNzE4ZWFhO1xuICBwYWRkaW5nOiAzMHB4IDA7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLnNpdGUtZm9vdGVyIC5mbGV4IHtcbiAgICAgIGZsZXgtd3JhcDogd3JhcDsgfSB9XG4gIC5zaXRlLWZvb3RlciAuZm9vdGVyX2l0ZW0ge1xuICAgIHdpZHRoOiAyNSU7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAgIC5zaXRlLWZvb3RlciAuZm9vdGVyX2l0ZW0ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNjBweDsgfSB9XG4gIC5zaXRlLWZvb3RlciAud2lkZ2V0LWFyZWEge1xuICAgIHdpZHRoOiA3NSU7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgLnNpdGUtZm9vdGVyIC53aWRnZXQtYXJlYSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7IH0gfVxuICAuc2l0ZS1mb290ZXIgLndpZGdldCB7XG4gICAgd2lkdGg6IDMzJTtcbiAgICBmbGV4OiAwIDAgMzMlO1xuICAgIHBhZGRpbmc6IDAgMjVweDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgLnNpdGUtZm9vdGVyIC53aWRnZXQge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZmxleDogMCAwIDEwMCU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDYwcHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMS44OyB9IH1cbiAgICAuc2l0ZS1mb290ZXIgLndpZGdldCBhLCAuc2l0ZS1mb290ZXIgLndpZGdldCBwIHtcbiAgICAgIGNvbG9yOiAjZTZlOGU4OyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAgICAgLnNpdGUtZm9vdGVyIC53aWRnZXQgYSwgLnNpdGUtZm9vdGVyIC53aWRnZXQgcCB7XG4gICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuODsgfSB9XG4gICAgLnNpdGUtZm9vdGVyIC53aWRnZXQgYTpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDNweDsgfVxuICAgIC5zaXRlLWZvb3RlciAud2lkZ2V0IHVsIHtcbiAgICAgIGxpc3Qtc3R5bGU6IFwi4oCjIFwiO1xuICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgbWFyZ2luOiAwcHg7IH1cbiAgLnNpdGUtZm9vdGVyIC5mb290ZXJfdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cbiAgLnNpdGUtZm9vdGVyIC53aWRnZXQtdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IH1cblxuLnNpdGUtc3ViZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFjMjE1NTtcbiAgY29sb3I6ICNlNmU4ZTg7XG4gIHBhZGRpbmc6IDEwcHggMDtcbiAgZm9udC1zaXplOiAuOXJlbTsgfVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBhbGwgLjJzOyB9XG5cbi5saW5rX2Jsb2NrIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cbiAgLmxpbmtfYmxvY2s6aG92ZXIgaW1nIHtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCAjZTZlOGU4OyB9XG5cbi5idG4sIC5idG4tLXdoaXRlLCAuYnRuLS15ZWxsb3csXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2FhMzQyO1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHBhZGRpbmc6IDE1cHggMzBweDtcbiAgZm9udC1zaXplOiAuOXJlbTtcbiAgYm9yZGVyOiBub25lO1xuICBmb250LXdlaWdodDogNzAwOyB9XG4gIC5idG46aG92ZXIsIC5idG4tLXdoaXRlOmhvdmVyLCAuYnRuLS15ZWxsb3c6aG92ZXIsXG4gIGlucHV0W3R5cGU9XCJzdWJtaXRcIl06aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyYzM0ODQ7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi5idG4tLXdoaXRlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGNvbG9yOiAjMmMzNDg0OyB9XG4gIC5idG4tLXdoaXRlOmhvdmVyIHtcbiAgICBjb2xvcjogd2hpdGU7IH1cblxuLmJ0bi0teWVsbG93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYzcwNDsgfVxuICAuYnRuLS15ZWxsb3c6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcgPic7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXNpemU6IC44O1xuICAgIHBhZGRpbmctbGVmdDogMTBweDsgfVxuXG4vKlxuICogRm9ybSAmIElucHV0c1xuICovXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcbmlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0sXG50ZXh0YXJlYSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY2ZjY7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlNmU4ZTg7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbmxhYmVsIHtcbiAgY29sb3I6ICM1ZjY1NmQ7XG4gIGZvbnQtc2l6ZTogMXJlbTsgfVxuXG4uc2VjdGlvbiB7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4uc2VjdGlvbl90aXRsZSwgaDIuc2NyZWVuLXJlYWRlci10ZXh0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDIycHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBsaW5lLWhlaWdodDogMS40NGVtO1xuICBjb2xvcjogIzJjMzQ4NDsgfVxuICAuc2VjdGlvbl90aXRsZTpiZWZvcmUsIGgyLnNjcmVlbi1yZWFkZXItdGV4dDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC0xNXB4O1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogM3B4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzYWEzNDI7IH1cblxuaDIuc2NyZWVuLXJlYWRlci10ZXh0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG5cbi5zZWN0aW9uLndpZGVwYW5lbCAuc2VjdGlvbl9jb3ZlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLnNlY3Rpb24ud2lkZXBhbmVsIC5zZWN0aW9uX2NvdmVyOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zKTsgfVxuXG4uc2VjdGlvbi53aWRlcGFuZWwgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNjAwcHg7XG4gIGhlaWdodDogNjB2aDtcbiAgb2JqZWN0LWZpdDogY292ZXI7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLnNlY3Rpb24ud2lkZXBhbmVsIGltZyB7XG4gICAgICBoZWlnaHQ6IDEwMHZoOyB9IH1cblxuLnNlY3Rpb24ud2lkZXBhbmVsIC5zZWN0aW9uX3RpdGxlLCAuc2VjdGlvbi53aWRlcGFuZWwgaDIuc2NyZWVuLXJlYWRlci10ZXh0IHtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDNyZW07IH1cbiAgLnNlY3Rpb24ud2lkZXBhbmVsIC5zZWN0aW9uX3RpdGxlOmJlZm9yZSwgLnNlY3Rpb24ud2lkZXBhbmVsIGgyLnNjcmVlbi1yZWFkZXItdGV4dDpiZWZvcmUge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuLnNlY3Rpb24ud2lkZXBhbmVsIC5zZWN0aW9uX2NvbnRlbnQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDk5OTtcbiAgdG9wOiAzMCU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjZmZjNzA0O1xuICBtYXgtd2lkdGg6IDkwMHB4OyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgIC5zZWN0aW9uLndpZGVwYW5lbCAuc2VjdGlvbl9jb250ZW50IHtcbiAgICAgIHRvcDogMzBweDtcbiAgICAgIHJpZ2h0OiA1MHB4O1xuICAgICAgbGVmdDogMjBweDsgfSB9XG4gIC5zZWN0aW9uLndpZGVwYW5lbCAuc2VjdGlvbl9jb250ZW50IHAge1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogMS40cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cblxuLnNlY3Rpb24ud2lkZXBhbmVsIC5zZWN0aW9uX2FjdGlvbiB7XG4gIG1hcmdpbi10b3A6IDIwcHg7IH1cblxuLnNlY3Rpb24ubG9nb3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNmY2O1xuICBwYWRkaW5nLXRvcDogNjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7IH1cbiAgLnNlY3Rpb24ubG9nb3MgLnNlY3Rpb25fdGl0bGUsIC5zZWN0aW9uLmxvZ29zIGgyLnNjcmVlbi1yZWFkZXItdGV4dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuICAuc2VjdGlvbi5sb2dvcyAubG9nb3NfbGlzdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtd3JhcDogd3JhcDsgfVxuICAgIC5zZWN0aW9uLmxvZ29zIC5sb2dvc19saXN0IGltZyB7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBtYXgtaGVpZ2h0OiAxNTBweDtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgbWF4LXdpZHRoOiAxNTBweDtcbiAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5zZWN0aW9uLm5ld3Mge1xuICBwYWRkaW5nOiA0MHB4IDAgMjBweDsgfVxuICAuc2VjdGlvbi5uZXdzIC5uZXdzX3RpdGxlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuICAgIC5zZWN0aW9uLm5ld3MgLm5ld3NfdGl0bGU6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAtMTVweDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMjBweDtcbiAgICAgIGhlaWdodDogM3B4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzNhYTM0MjsgfVxuICAuc2VjdGlvbi5uZXdzIC5jYXJkX2NvdmVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG5cbi5zZWN0aW9uLnNlcnZpY2VzIHtcbiAgcGFkZGluZy10b3A6IDYwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4OyB9XG4gIC5zZWN0aW9uLnNlcnZpY2VzIC5zZXJ2aWNlX3RpdGxlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLnNlY3Rpb24uc2VydmljZXMgLmNhcmRfY292ZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IH1cbiAgLnNlY3Rpb24uc2VydmljZXMgLmxpbmtfYmxvY2s6aG92ZXIgaW1nIHtcbiAgICBib3gtc2hhZG93OiBub25lOyB9XG4gIC5zZWN0aW9uLnNlcnZpY2VzIC5zZXJ2aWNlX2NhcmQ6aG92ZXIge1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4ICNlNmU4ZTg7IH1cblxuLnNlcnZpY2VfdGl0bGUge1xuICBwYWRkaW5nOiAxNXB4IDA7IH1cblxuLnNlY3Rpb25fY2FyZHMsIC5zZWN0aW9uX2NhcmRzLS1oYWxmLCAuc2VjdGlvbl9jYXJkcy0tdGhpcmQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgbWFyZ2luLXRvcDogMjVweDtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLnNlY3Rpb25fY2FyZHMgLnNlcnZpY2VfY2FyZCwgLnNlY3Rpb25fY2FyZHMtLWhhbGYgLnNlcnZpY2VfY2FyZCwgLnNlY3Rpb25fY2FyZHMtLXRoaXJkIC5zZXJ2aWNlX2NhcmQge1xuICAgIGZsZXg6IDE7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjZmNjtcbiAgICBwYWRkaW5nOiAxNXB4OyB9XG4gICAgLnNlY3Rpb25fY2FyZHMgLnNlcnZpY2VfY2FyZCAuY2FyZF9jb3ZlcjphZnRlciwgLnNlY3Rpb25fY2FyZHMtLWhhbGYgLnNlcnZpY2VfY2FyZCAuY2FyZF9jb3ZlcjphZnRlciwgLnNlY3Rpb25fY2FyZHMtLXRoaXJkIC5zZXJ2aWNlX2NhcmQgLmNhcmRfY292ZXI6YWZ0ZXIge1xuICAgICAgcGFkZGluZy1ib3R0b206IDcwJTsgfVxuICAgIC5zZWN0aW9uX2NhcmRzIC5zZXJ2aWNlX2NhcmQgcCwgLnNlY3Rpb25fY2FyZHMtLWhhbGYgLnNlcnZpY2VfY2FyZCBwLCAuc2VjdGlvbl9jYXJkcy0tdGhpcmQgLnNlcnZpY2VfY2FyZCBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTsgfVxuICAgIC5zZWN0aW9uX2NhcmRzIC5zZXJ2aWNlX2NhcmQgc3BhbiwgLnNlY3Rpb25fY2FyZHMtLWhhbGYgLnNlcnZpY2VfY2FyZCBzcGFuLCAuc2VjdGlvbl9jYXJkcy0tdGhpcmQgLnNlcnZpY2VfY2FyZCBzcGFuIHtcbiAgICAgIGNvbG9yOiAjZmZjNzA0OyB9XG4gICAgLnNlY3Rpb25fY2FyZHMgLnNlcnZpY2VfY2FyZCAuY2FyZF9leGNlcnB0LCAuc2VjdGlvbl9jYXJkcy0taGFsZiAuc2VydmljZV9jYXJkIC5jYXJkX2V4Y2VycHQsIC5zZWN0aW9uX2NhcmRzLS10aGlyZCAuc2VydmljZV9jYXJkIC5jYXJkX2V4Y2VycHQge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAuc2VjdGlvbl9jYXJkcyAubmV3c19jYXJkLCAuc2VjdGlvbl9jYXJkcy0taGFsZiAubmV3c19jYXJkLCAuc2VjdGlvbl9jYXJkcy0tdGhpcmQgLm5ld3NfY2FyZCB7XG4gICAgZmxleDogMCAwIDI0JTtcbiAgICB3aWR0aDogMjQlO1xuICAgIG1hcmdpbi1ib3R0b206IDQlOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgICAuc2VjdGlvbl9jYXJkcyAubmV3c19jYXJkLCAuc2VjdGlvbl9jYXJkcy0taGFsZiAubmV3c19jYXJkLCAuc2VjdGlvbl9jYXJkcy0tdGhpcmQgLm5ld3NfY2FyZCB7XG4gICAgICAgIGZsZXg6IDAgMCA0OCU7XG4gICAgICAgIHdpZHRoOiA0OCU7IH0gfVxuICAgIC5zZWN0aW9uX2NhcmRzIC5uZXdzX2NhcmQgLm5ld3NfdGl0bGUsIC5zZWN0aW9uX2NhcmRzLS1oYWxmIC5uZXdzX2NhcmQgLm5ld3NfdGl0bGUsIC5zZWN0aW9uX2NhcmRzLS10aGlyZCAubmV3c19jYXJkIC5uZXdzX3RpdGxlIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDI1cHg7IH1cblxuLnNlY3Rpb25fY2FyZHMtLWhhbGYgLnNlcnZpY2VfY2FyZCB7XG4gIGZsZXg6IDAgMCA0OCU7XG4gIHdpZHRoOiA0OCU7XG4gIHBhZGRpbmc6IDMwcHg7XG4gIG1heC13aWR0aDogbm9uZSAhaW1wb3J0YW50OyB9XG4gIC5zZWN0aW9uX2NhcmRzLS1oYWxmIC5zZXJ2aWNlX2NhcmQgLmNhcmRfZXhjZXJwdCB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cblxuLnNlY3Rpb25fY2FyZHMtLWhhbGYgLm5ld3NfY2FyZCB7XG4gIGZsZXg6IDAgMCA0OCU7XG4gIHdpZHRoOiA0OCU7IH1cblxuLnNlY3Rpb25fY2FyZHMtLXRoaXJkIC5zZXJ2aWNlX2NhcmQge1xuICBmbGV4OiAwIDAgMzIlO1xuICB3aWR0aDogMzIlO1xuICBwYWRkaW5nOiAzMHB4OyB9XG4gIC5zZWN0aW9uX2NhcmRzLS10aGlyZCAuc2VydmljZV9jYXJkIC5jYXJkX2V4Y2VycHQge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5zZWN0aW9uX2NhcmRzLS10aGlyZCAubmV3c19jYXJkIHtcbiAgZmxleDogMCAwIDMyJTtcbiAgd2lkdGg6IDMyJTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAuc2VjdGlvbl9jYXJkcy0tdGhpcmQgLm5ld3NfY2FyZCB7XG4gICAgICBmbGV4OiAwIDAgNDglO1xuICAgICAgd2lkdGg6IDQ4JTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDQlOyB9IH1cblxuLyogU2xpZGVyICovXG4uc2xpY2stc2xpZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXRvdWNoLWFjdGlvbjogcGFuLXk7XG4gIHRvdWNoLWFjdGlvbjogcGFuLXk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLnNsaWNrLWxpc3Qge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuICAuc2xpY2stbGlzdDpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuICAuc2xpY2stbGlzdC5kcmFnZ2luZyB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGN1cnNvcjogaGFuZDsgfVxuXG4uc2xpY2stc2xpZGVyIC5zbGljay10cmFjayxcbi5zbGljay1zbGlkZXIgLnNsaWNrLWxpc3Qge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7IH1cblxuLnNsaWNrLXRyYWNrIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLnNsaWNrLXRyYWNrOmJlZm9yZSwgLnNsaWNrLXRyYWNrOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gIC5zbGljay10cmFjazphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7IH1cbiAgLnNsaWNrLWxvYWRpbmcgLnNsaWNrLXRyYWNrIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuLnNsaWNrLXNsaWRlIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGhlaWdodDogMTAwJTtcbiAgbWluLWhlaWdodDogMXB4OyB9XG4gIFtkaXI9XCJydGxcIl0gLnNsaWNrLXNsaWRlIHtcbiAgICBmbG9hdDogcmlnaHQ7IH1cbiAgLnNsaWNrLXNsaWRlIGltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWF4LWhlaWdodDogNTUwcHg7XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICAgIG9iamVjdC1maXQ6IGNvbnRhaW47IH1cbiAgLnNsaWNrLXNsaWRlLnNsaWNrLWxvYWRpbmcgaW1nIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5zbGljay1zbGlkZSBmaWdjYXB0aW9uIHtcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgICBmb250LXNpemU6IC45cmVtO1xuICAgIGNvbG9yOiBncmF5O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuc2xpY2stc2xpZGUuZHJhZ2dpbmcgaW1nIHtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTsgfVxuICAuc2xpY2staW5pdGlhbGl6ZWQgLnNsaWNrLXNsaWRlIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuc2xpY2stbG9hZGluZyAuc2xpY2stc2xpZGUge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjsgfVxuICAuc2xpY2stdmVydGljYWwgLnNsaWNrLXNsaWRlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7IH1cblxuLnNsaWNrLWFycm93LnNsaWNrLWhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogU2xpZGVyICovXG4uc2xpY2stbG9hZGluZyAuc2xpY2stbGlzdCB7XG4gIGJhY2tncm91bmQ6ICNmZmYgdXJsKFwiLi9hamF4LWxvYWRlci5naWZcIikgY2VudGVyIGNlbnRlciBuby1yZXBlYXQ7IH1cblxuLyogSWNvbnMgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJzbGlja1wiO1xuICBzcmM6IHVybChcIi4vZm9udHMvc2xpY2suZW90XCIpO1xuICBzcmM6IHVybChcIi4vZm9udHMvc2xpY2suZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi9mb250cy9zbGljay53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4vZm9udHMvc2xpY2sudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuL2ZvbnRzL3NsaWNrLnN2ZyNzbGlja1wiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG4vKiBBcnJvd3MgKi9cbi5zbGljay1wcmV2LFxuLnNsaWNrLW5leHQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBsaW5lLWhlaWdodDogMTtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBjb2xvcjogYmxhY2s7XG4gIHotaW5kZXg6IDk5O1xuICBvcGFjaXR5OiAxO1xuICB3aWR0aDogMTAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuc2xpY2stcHJldjpob3ZlciwgLnNsaWNrLXByZXY6Zm9jdXMsXG4gIC5zbGljay1uZXh0OmhvdmVyLFxuICAuc2xpY2stbmV4dDpmb2N1cyB7XG4gICAgb3BhY2l0eTogMTsgfVxuICAuc2xpY2stcHJldi5zbGljay1kaXNhYmxlZDpiZWZvcmUsXG4gIC5zbGljay1uZXh0LnNsaWNrLWRpc2FibGVkOmJlZm9yZSB7XG4gICAgb3BhY2l0eTogMC4yNTsgfVxuICAuc2xpY2stcHJldiBzcGFuLFxuICAuc2xpY2stbmV4dCBzcGFuIHtcbiAgICBmb250LXNpemU6IDMwcHg7IH1cbiAgLnNsaWNrLXByZXYgcCxcbiAgLnNsaWNrLW5leHQgcCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICBsaW5lLWhlaWdodDogMTsgfVxuXG4uc2xpY2stcHJldiB7XG4gIGxlZnQ6IC00MHB4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfVxuICAuc2xpY2stcHJldiBwIHtcbiAgICBtYXJnaW4tbGVmdDogLTE2cHg7IH1cblxuLnNsaWNrLW5leHQge1xuICByaWdodDogLTQwcHg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuICAuc2xpY2stbmV4dCBwIHtcbiAgICBtYXJnaW4tcmlnaHQ6IC0xMHB4OyB9XG5cbi8qIERvdHMgKi9cbi5zbGljay1kb3R0ZWQuc2xpY2stc2xpZGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuXG4uc2xpY2stZG90cyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtMjVweDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICB3aWR0aDogMTAwJTsgfVxuICAuc2xpY2stZG90cyBsaSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgbWFyZ2luOiAwIDVweDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC5zbGljay1kb3RzIGxpIGJ1dHRvbiB7XG4gICAgICBib3JkZXI6IDA7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgbGluZS1oZWlnaHQ6IDBweDtcbiAgICAgIGZvbnQtc2l6ZTogMHB4O1xuICAgICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgICAuc2xpY2stZG90cyBsaSBidXR0b246aG92ZXIsIC5zbGljay1kb3RzIGxpIGJ1dHRvbjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgICAgICAgLnNsaWNrLWRvdHMgbGkgYnV0dG9uOmhvdmVyOmJlZm9yZSwgLnNsaWNrLWRvdHMgbGkgYnV0dG9uOmZvY3VzOmJlZm9yZSB7XG4gICAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgICAgLnNsaWNrLWRvdHMgbGkgYnV0dG9uOmJlZm9yZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBjb250ZW50OiBcIuKAolwiO1xuICAgICAgICB3aWR0aDogMjBweDtcbiAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICBmb250LWZhbWlseTogXCJzbGlja1wiO1xuICAgICAgICBmb250LXNpemU6IDZweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgY29sb3I6IGJsYWNrO1xuICAgICAgICBvcGFjaXR5OiAwLjI1O1xuICAgICAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAgICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsgfVxuICAgIC5zbGljay1kb3RzIGxpLnNsaWNrLWFjdGl2ZSBidXR0b246YmVmb3JlIHtcbiAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgIG9wYWNpdHk6IDAuNzU7IH1cblxuLypcbiAqIFBBR0VTXG4gKi9cbi5lbnRyeS1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNmY2O1xuICBwYWRkaW5nOiAyMGVtIDAgM2VtO1xuICBtYXJnaW4tYm90dG9tOiA4MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmVudHJ5LWhlYWRlciAuZW50cnktdGl0bGUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmb250LWZhbWlseTogXCJIaW5kXCIsIGFyaWFsLCBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiAjMmMzNDg0O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjFlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpO1xuICAgIHotaW5kZXg6IDk5OTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogLjNlbSAuNWVtIDBlbTtcbiAgICBtYXgtd2lkdGg6IDgwMHB4OyB9XG4gICAgLmVudHJ5LWhlYWRlciAuZW50cnktdGl0bGUgKiB7XG4gICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiBpbmhlcml0O1xuICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICBkaXNwbGF5OiBpbmxpbmU7IH1cblxuLnBhZ2VfY29udGVudCB7XG4gIG1hcmdpbi1ib3R0b206IDEwMHB4OyB9XG5cbi5lbnRyeS1yZWJvbmRzIHtcbiAgcGFkZGluZzogM2VtIDAgMWVtOyB9XG4gIC5lbnRyeS1yZWJvbmRzIC5zZWN0aW9uX3RpdGxlOjpiZWZvcmUsIC5lbnRyeS1yZWJvbmRzIGgyLnNjcmVlbi1yZWFkZXItdGV4dDo6YmVmb3JlIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgLmVudHJ5LXJlYm9uZHMgLnNlcnZpY2VfY2FyZCB7XG4gICAgbWF4LXdpZHRoOiAyNCU7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAgIC5lbnRyeS1yZWJvbmRzIC5zZXJ2aWNlX2NhcmQge1xuICAgICAgICB3aWR0aDogNDglO1xuICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgIGZsZXg6IDAgMCA0OCU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDQlOyB9IH1cblxuLmVudHJ5LW5ld3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNmY2O1xuICBwYWRkaW5nOiAzZW0gMCAxZW07IH1cblxuLmVudHJ5LWNvbnRlbnQgaDUge1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDsgfVxuXG4uZW50cnktY29udGVudCBpbWcge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG5cbi5lbnRyeS1jb250ZW50IC5nYWxsZXJ5IHtcbiAgbWFyZ2luOiA0MHB4IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7IH1cblxuLmVudHJ5LW1ldGEge1xuICBib3JkZXI6IDFweCBzb2xpZCAjNWY2NTZkO1xuICBwYWRkaW5nOiAyMHB4O1xuICBmb250LXNpemU6IDEuMmVtO1xuICBsaW5lLWhlaWdodDogMS4yOyB9XG4gIC5lbnRyeS1tZXRhIGRpdiB7XG4gICAgbWFyZ2luLWJvdHRvbTogOHB4OyB9XG4gIC5lbnRyeS1tZXRhIGEge1xuICAgIGNvbG9yOiBpbmhlcml0OyB9XG5cbi5lbnRyeS1leGNlcnB0IHtcbiAgbWF4LXdpZHRoOiA3NTBweDsgfVxuICAuZW50cnktZXhjZXJwdCBwIHtcbiAgICBmb250LXdlaWdodDogOTAwO1xuICAgIGZvbnQtc2l6ZTogMS40cmVtOyB9XG5cbi5lbnRyeS1jb250ZW50dGV4dCB7XG4gIG1heC13aWR0aDogNzUwcHg7IH1cblxuLnNlcnZpY2VzX2xpc3Qge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG4gIC5zZXJ2aWNlc19saXN0IGEge1xuICAgIG1hcmdpbi1ib3R0b206IDdweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBsaW5lLWhlaWdodDogMTguOXB4O1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgY29sb3I6IGJsYWNrOyB9XG5cbi5ibG9ja19jb250YWN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNhYTM0MjtcbiAgY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXgtd2lkdGg6IDcwMHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuYmxvY2tfY29udGFjdCBwIHtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG4gIC5ibG9ja19jb250YWN0IC5ibG9ja190aXRsZSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cbiAgLmJsb2NrX2NvbnRhY3QgLmJsb2NrX2J0biB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgYm9yZGVyOiAxcHggc29saWQ7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gIC50eXBlLXBvc3QgLnBhZ2VfY29udGVudCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfSB9XG5cbi50eXBlLXBvc3QgLnBhZ2VfY29udGVudCBtYWluIHtcbiAgb3JkZXI6IDE7XG4gIGZsZXg6IDAgMCA2NSU7XG4gIHdpZHRoOiA2NSU7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLnR5cGUtcG9zdCAucGFnZV9jb250ZW50IG1haW4ge1xuICAgICAgb3JkZXI6IDA7XG4gICAgICBmbGV4OiAwIDAgMTAwJTtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLnR5cGUtcG9zdCAucGFnZV9jb250ZW50IGFzaWRlIHtcbiAgZmxleDogMCAwIDMwJTtcbiAgd2lkdGg6IDMwJTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAudHlwZS1wb3N0IC5wYWdlX2NvbnRlbnQgYXNpZGUge1xuICAgICAgZmxleDogMCAwIDEwMCU7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi50eXBlLXBvc3QgLmVudHJ5LWV4Y2VycHQge1xuICBtYXJnaW4tbGVmdDogMDsgfVxuXG4udHlwZS1wb3N0IC5zZXJ2aWNlX2NhcmQge1xuICBtYXgtd2lkdGg6IDI0JTsgfVxuXG4ubmF2LWxpbmtzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7IH1cbiAgLm5hdi1saW5rcyAubmF2LXRpdGxlIHtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC1zaXplOiAxLjRyZW07IH1cbiIsIi8qXG4gKiBQQUdFU1xuICovXG5cblxuXG4uZW50cnktaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheV9saWdodGVyO1xuICAgIHBhZGRpbmc6IDIwZW0gMCAzZW07XG4gICAgbWFyZ2luLWJvdHRvbTogODBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAuZW50cnktdGl0bGUge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAkaGluZDtcbiAgICAgICAgY29sb3I6ICRibHVlO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjFlbTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDBweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAuOSk7XG4gICAgICAgIHotaW5kZXg6IDk5OTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBwYWRkaW5nOiAuM2VtIC41ZW0gMGVtO1xuICAgICAgICBtYXgtd2lkdGg6IDgwMHB4O1xuXG4gICAgICAgICoge1xuICAgICAgICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogaW5oZXJpdDtcbiAgICAgICAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lOyB9IH0gfVxuXG5cbi5wYWdlX2NvbnRlbnQge1xuICAgIG1hcmdpbi1ib3R0b206IDEwMHB4OyB9XG5cblxuLmVudHJ5LXJlYm9uZHMge1xuICAgIHBhZGRpbmc6IDNlbSAwIDFlbTtcbiAgICAuc2VjdGlvbl90aXRsZTo6YmVmb3JlIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAgIC5zZXJ2aWNlX2NhcmQge1xuICAgICAgICBtYXgtd2lkdGg6IDI0JTtcbiAgICAgICAgQGluY2x1ZGUgdXAtdG8oODAwcHgpIHtcbiAgICAgICAgICAgIHdpZHRoOiA0OCU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgICAgICBmbGV4OiAwIDAgNDglO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNCU7IH0gfSB9XG5cblxuLmVudHJ5LW5ld3Mge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5X2xpZ2h0ZXI7XG4gICAgcGFkZGluZzogM2VtIDAgMWVtOyB9XG5cbi5lbnRyeS1jb250ZW50IHtcbiAgICBoNSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG5cbiAgICBpbWcge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG5cbiAgICAuZ2FsbGVyeSB7XG4gICAgICAgIG1hcmdpbjogNDBweCAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5OyB9IH1cblxuLmVudHJ5LW1ldGEge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5O1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgIGRpdiB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDhweDsgfVxuICAgIGEge1xuICAgICAgICBjb2xvcjogaW5oZXJpdDsgfSB9XG5cblxuLmVudHJ5LWV4Y2VycHQge1xuICAgIG1heC13aWR0aDogNzUwcHg7XG4gICAgcCB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMS40cmVtOyB9IH1cblxuXG4uZW50cnktY29udGVudHRleHQge1xuICAgIG1heC13aWR0aDogNzUwcHg7IH1cblxuXG4uc2VydmljZXNfbGlzdCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcblxuICAgIGEge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxOC45cHg7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgICAgIGNvbG9yOiBibGFjazsgfSB9XG5cblxuLmJsb2NrX2NvbnRhY3Qge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmVlbl9saWdodDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBtYXgtd2lkdGg6IDcwMHB4O1xuICAgIG1hcmdpbjogYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBwIHtcbiAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IH1cblxuICAgIC5ibG9ja190aXRsZSB7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsOyB9XG5cbiAgICAuYmxvY2tfYnRuIHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZDsgfSB9XG5cblxuXG5cbi8vIFBBR0VTXG5cblxuXG4vLyBQT1NUU1xuXG4udHlwZS1wb3N0IHtcbiAgICAucGFnZV9jb250ZW50IHtcbiAgICAgICAgQGluY2x1ZGUgdXAtdG8oODAwcHgpIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgICAgICAgbWFpbiB7XG4gICAgICAgICAgICBvcmRlcjogMTtcbiAgICAgICAgICAgIGZsZXg6IDAgMCA2NSU7XG4gICAgICAgICAgICB3aWR0aDogNjUlO1xuICAgICAgICAgICAgQGluY2x1ZGUgdXAtdG8oODAwcHgpIHtcbiAgICAgICAgICAgICAgICBvcmRlcjogMDtcbiAgICAgICAgICAgICAgICBmbGV4OiAwIDAgMTAwJTtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbiAgICAgICAgYXNpZGUge1xuICAgICAgICAgICAgZmxleDogMCAwIDMwJTtcbiAgICAgICAgICAgIHdpZHRoOiAzMCU7XG4gICAgICAgICAgICBAaW5jbHVkZSB1cC10byg4MDBweCkge1xuICAgICAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOyB9IH0gfVxuXG4gICAgLmVudHJ5LWV4Y2VycHQge1xuICAgICAgICBtYXJnaW4tbGVmdDogMDsgfVxuXG4gICAgLnNlcnZpY2VfY2FyZCB7XG4gICAgICAgIG1heC13aWR0aDogMjQlOyB9IH1cblxuXG5cbi5uYXYtbGlua3Mge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG5cblxuICAgIC5uYXYtdGl0bGUge1xuICAgICAgICBjb2xvcjogYmxhY2s7XG4gICAgICAgIGZvbnQtc2l6ZTogMS40cmVtOyB9IH1cblxuIl19 */
